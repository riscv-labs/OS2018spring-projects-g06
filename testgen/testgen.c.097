//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: memread mmap
 */
static int test_memread_mmap_pfc_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int r, signal;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    r = *p;
  pf_active = 0;
  expect_result("r", r, 0);
  expect_result("signal", signal, 0);
  return r;
}
static int test_memread_mmap_pfc_0_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memread_mmap_pfc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
static void setup_memread_mmap_pfc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
  init_map_anon(0x12345601000, 0, 0);
}
static void setup_memread_mmap_pfc_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_memread_mmap_pfc_0_final(void) {
  
}
static void setup_memread_mmap_pfc_0_procfinal(void) {
  
}

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pfc_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pfc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
static void setup_memread_mmap_pfc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memread_mmap_pfc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pfc_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pfc_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pfc_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
static void setup_memread_mmap_pfc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_mmap_pfc_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_pfc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
static void setup_memread_mmap_pfc_2_final(void) {
  unlink("__i0");
}
// static void setup_memread_mmap_pfc_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pfc_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pfc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
static void setup_memread_mmap_pfc_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_mmap_pfc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pfc_3_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pfc_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pfc_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pfc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pfc_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_pfc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pfc_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pfc_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pfc_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pfc_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pfc_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_pfc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pfc_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pfc_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pfc_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pfc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
static void setup_memread_mmap_pfc_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pfc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pfc_6_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pfc_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pfc_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pfc_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pfc_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_pfc_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pfc_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pfc_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pfc_8_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memread_mmap_pfc_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pfc_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pfc_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pfc_8_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pfc_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pfc_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pfc_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
static void setup_memread_mmap_pfc_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pfc_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pfc_9_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pfc_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pfc_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pfc_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
static void setup_memread_mmap_pfc_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pfc_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pfc_10_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pfc_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pfc_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pfc_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pfc_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pfc_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pfc_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pfc_11_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pfc_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pf6_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
static void setup_memread_mmap_pf6_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_mmap_pf6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
static void setup_memread_mmap_pf6_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_memread_mmap_pf6_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_memread_mmap_pf6_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf6_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pf6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
static void setup_memread_mmap_pf6_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_mmap_pf6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pf6_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pf6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf6_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pf6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
static void setup_memread_mmap_pf6_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memread_mmap_pf6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pf6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pf6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf6_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pf6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
static void setup_memread_mmap_pf6_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_mmap_pf6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pf6_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pf6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pf5_0_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pf5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pf5_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pf5_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pf5_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memread_mmap_pf5_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pf5_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pf5_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pf5_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_mmap_pf5_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pf5_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_pf5_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
static void setup_memread_mmap_pf5_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_pf5_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_pf5_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
static void setup_memread_mmap_pf5_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_mmap_pf5_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_pf5_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
static void setup_memread_mmap_pf5_6_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_memread_mmap_pf5_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pf5_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pf5_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pf5_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_pf5_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pf5_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pf5_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_pf5_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_pf5_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_pf5_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pf5_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pf5_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pf5_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_pf5_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pf5_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_pf5_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pf5_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_pf5_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_pf5_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pf5_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_pf5_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_16_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pf5_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_pf5_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pf5_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf5_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf5_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pf5_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_pf5_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_pf5_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf5_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf5_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf44_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pf44_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static void setup_memread_mmap_pf44_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_pf44_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memread_mmap_pf44_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf44_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf44_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf44_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf44_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf44_0_1
// static void setup_memread_mmap_pf44_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_pf44_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_mmap_pf44_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf44_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf44_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf44_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf44_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf44_0_1
// static void setup_memread_mmap_pf44_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_pf44_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memread_mmap_pf44_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf44_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf44_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf44_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf44_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf44_0_1
// static void setup_memread_mmap_pf44_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_pf44_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_mmap_pf44_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf44_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pf44_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pf0_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_memread_mmap_pf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf0_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pf0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pf0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pf0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_pf0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pf0_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pf0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pec_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pec_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pec_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pec_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pec_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pec_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pec_1_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pec_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pec_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pec_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pec_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pec_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pec_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_pec_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pec_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pec_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pec_2_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pec_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pec_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pec_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_pec_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pec_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pec_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pec_3_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pec_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pe6_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static void setup_memread_mmap_pe6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_pe6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pf6_0_proc0
// static void setup_memread_mmap_pe6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pe6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pe6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pe6_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pe6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_pe6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pf6_1_proc0
// static void setup_memread_mmap_pe6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pe6_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pe6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pe6_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pe6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_pe6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pf6_2_proc0
// static void setup_memread_mmap_pe6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pe6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pe6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pe6_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pe6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_pe6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pf6_3_proc0
// static void setup_memread_mmap_pe6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pe6_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pe6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe5_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pe5_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pe5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pe5_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pf5_1_proc0
// static void setup_memread_mmap_pe5_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pe5_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pe5_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe5_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pe5_1_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pe5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pe5_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pf5_1_proc0
// static void setup_memread_mmap_pe5_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pe5_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pe5_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe5_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pe5_2_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pe5_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pe5_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pf44_0_proc0
// static void setup_memread_mmap_pe5_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pe5_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pe5_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe5_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pe5_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_pe5_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pe5_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pf5_3_proc0
// static void setup_memread_mmap_pe5_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pe5_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pe5_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe5_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pe5_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_1_1
// static void setup_memread_mmap_pe5_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pe5_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pf5_3_proc0
// static void setup_memread_mmap_pe5_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pe5_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pe5_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe5_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pe5_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pe5_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pe5_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pf44_1_proc0
// static void setup_memread_mmap_pe5_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pe5_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pe5_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe5_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pe5_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pe5_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pe5_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pf5_1_proc0
// static void setup_memread_mmap_pe5_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pe5_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pe5_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe5_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pe5_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pe5_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pe5_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pf5_3_proc0
// static void setup_memread_mmap_pe5_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pe5_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pe5_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pe0_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_memread_mmap_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pe0_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pe0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pe0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_pe0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pe0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pe0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pe0_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pe0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pd8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pd8_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pd8_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pd8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pd8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pd8_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pd8_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd8_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pd8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pd8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pd8_2_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pd8_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd8_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pd8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
static void setup_memread_mmap_pd8_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_pd8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pd8_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd8_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd8_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pd8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pd8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pd8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pd8_4_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pd8_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd8_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd8_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pd8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pd8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
static void setup_memread_mmap_pd8_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_pd8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pd8_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd8_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd8_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pd8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pd8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pd8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pd8_6_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pd8_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd8_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd8_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pd8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pd8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pd8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_pd8_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pd8_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd8_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd8_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pd8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pd8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pd8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pd8_8_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pd8_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd8_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd8_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pd8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pd8_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pd8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_pd8_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pd8_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd6_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pd6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
static void setup_memread_mmap_pd6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
static void setup_memread_mmap_pd6_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_memread_mmap_pd6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pd6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd6_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pd6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
static void setup_memread_mmap_pd6_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_mmap_pd6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pd6_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pd6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd6_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pd6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_pd6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pd6_0_proc0
static void setup_memread_mmap_pd6_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_memread_mmap_pd6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pd6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd6_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pd6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_pd6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pd6_1_proc0
// static void setup_memread_mmap_pd6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pd6_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pd6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pd4_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memread_mmap_pd4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
static void setup_memread_mmap_pd4_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_pd4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pd4_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd4_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd4_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_pd4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pd4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pd4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_pd4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pd4_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_pd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pd0_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pd0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pd0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pd0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_pd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pd0_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pd0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pcc_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pcc_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_pcc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pcc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pcc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pcc_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pcc_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pcc_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pcc_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_pcc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pcc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pcc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pcc_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pcc_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pcc_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pcc_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_pcc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pcc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pcc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pcc_2_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pcc_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pcc_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pcc_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_pcc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pcc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pcc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pcc_3_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pcc_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc6_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pc6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_pc6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pd6_0_proc0
// static void setup_memread_mmap_pc6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pc6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pc6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc6_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pc6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_pc6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pd6_1_proc0
// static void setup_memread_mmap_pc6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pc6_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pc6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc6_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pc6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_pc6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pd6_0_proc0
// static void setup_memread_mmap_pc6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pc6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pc6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc6_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pc6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_pc6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pd6_1_proc0
// static void setup_memread_mmap_pc6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pc6_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pc6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc5_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc5_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_pc5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pc5_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pc5_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_pc5_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pc5_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc5_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc5_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_pc5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pc5_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
static void setup_memread_mmap_pc5_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_pc5_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pc5_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc5_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_pc5_2_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pc5_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pc5_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pc5_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_pc5_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pc5_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc5_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc5_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_pc5_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pc5_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pc5_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_pc5_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pc5_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc5_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc5_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_1_1
// static void setup_memread_mmap_pc5_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pc5_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pc5_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_pc5_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pc5_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc5_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc5_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pc5_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pc5_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pc5_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_pc5_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pc5_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc5_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc5_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pc5_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pc5_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pc5_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_pc5_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pc5_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc5_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc5_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pc5_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_pc5_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pc5_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_pc5_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pc5_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_pc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pc0_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pc0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pc0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_pc0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_pc0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_pc0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pc0_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_pc0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
static int test_memread_mmap_pbc_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int r, signal;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    r = *p;
  pf_active = 0;
  expect_result("signal", signal, 7);
  expect_result("r", r, -1);
  return r;
}
// static int test_memread_mmap_pbc_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i0", 0x26000);
}
// static void setup_memread_mmap_pbc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_memread_mmap_pbc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 1, "__i0", 0x26000);
}
// static void setup_memread_mmap_pbc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memread_mmap_pbc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i0", 0x5000);
}
// static void setup_memread_mmap_pbc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
static void setup_memread_mmap_pbc_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_mmap_pbc_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i1", 0x26000);
}
// static void setup_memread_mmap_pbc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
static void setup_memread_mmap_pbc_5_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_memread_mmap_pbc_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pbc_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_pbc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pbc_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_file(0x12345601000, 1, "__i0", 0x26000);
}
// static void setup_memread_mmap_pbc_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_file(0x12345601000, 1, "__i0", 0x27000);
}
// static void setup_memread_mmap_pbc_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i0", 0x26000);
}
// static void setup_memread_mmap_pbc_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_pbc_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pbc_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i1", 0x26000);
}
// static void setup_memread_mmap_pbc_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pbc_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pbc_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 1, "__i1", 0x26000);
}
// static void setup_memread_mmap_pbc_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pbc_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 1, "__i0", 0x27000);
}
// static void setup_memread_mmap_pbc_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pbc_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pbc_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_16_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pbc_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbc_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbc_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_pbc_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pbc_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pbc_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pbc_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pbc_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbb_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbb_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
static void setup_memread_mmap_pbb_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_mmap_pbb_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_memread_mmap_pbb_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pbb_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pbb_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbb_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbb_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
static void setup_memread_mmap_pbb_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_mmap_pbb_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pbb_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
static void setup_memread_mmap_pbb_1_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_memread_mmap_pbb_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbb_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbb_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
static void setup_memread_mmap_pbb_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_mmap_pbb_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pbb_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pbb_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pbb_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbb_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbb_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pbb_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
static void setup_memread_mmap_pbb_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pbb_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pbb_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pbb_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbb_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbb_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pbb_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
static void setup_memread_mmap_pbb_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pbb_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pbb_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pbb_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbb_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbb_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pbb_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
static void setup_memread_mmap_pbb_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pbb_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pbb_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pbb_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbb_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbb_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pbb_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
static void setup_memread_mmap_pbb_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pbb_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pbb_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pbb_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pbb_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pbb_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pbb_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
static void setup_memread_mmap_pbb_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pbb_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pbb_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pbb_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
static void setup_memread_mmap_pba8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_mmap_pba8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_memread_mmap_pba8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pba8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_2_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i1", 0x1e28000);
}
// static void setup_memread_mmap_pba8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
static void setup_memread_mmap_pba8_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_mmap_pba8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i2", 0x1e28000);
}
// static void setup_memread_mmap_pba8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
static void setup_memread_mmap_pba8_3_final(void) {
  unlink("__i1");
  unlink("__i2");
  unlink("__i0");
}
// static void setup_memread_mmap_pba8_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
}
// static void setup_memread_mmap_pba8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
}
// static void setup_memread_mmap_pba8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_14_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x28000);
  init_map_file(0x12345601000, 0, "__i0", 0x28000);
}
// static void setup_memread_mmap_pba8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_15_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pba8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_16_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x8eb000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9347072, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x8ea000);
}
// static void setup_memread_mmap_pba8_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pba8_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_18_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_18_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i1", 0x4d4000);
}
// static void setup_memread_mmap_pba8_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_18_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_18_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_19_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_19_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_19_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_19_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_20_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_20_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_pba8_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_20_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_21_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_21_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memread_mmap_pba8_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_21_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_22_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_22_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_22_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_22_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_23_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_23_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_23_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_23_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_24_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_24_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_24_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_25_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_25_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_25_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_26_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_26_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_26_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_26_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_27_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_27_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_27_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_28_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_28_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_28_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_29_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_29_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
// static void setup_memread_mmap_pba8_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_pba8_19_proc0
// static void setup_memread_mmap_pba8_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_29_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_29_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_30_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_30_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_30_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_30_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_31_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_31_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pba8_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_31_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_31_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_32_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_32_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pba8_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_32_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_32_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_33_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_33_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_33_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_34_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_34_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pba8_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_34_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_34_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_35_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_35_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_35_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_36_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_36_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_36_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_36_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_37_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_37_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i1", 0x1e28000);
}
// static void setup_memread_mmap_pba8_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_37_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_37_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_38_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_38_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pba8_3_common
static void setup_memread_mmap_pba8_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i2", 0x1e28000);
}
// static void setup_memread_mmap_pba8_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_38_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_pba8_38_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_39_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_39_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_39_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i1", 0x1e28000);
}
// static void setup_memread_mmap_pba8_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_39_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_39_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_40_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_40_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_40_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x28000);
  init_map_file(0x12345601000, 1, "__i1", 0x26000);
}
// static void setup_memread_mmap_pba8_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_40_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_40_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_41_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_41_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pba8_3_common
static void setup_memread_mmap_pba8_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i2", 0x1e28000);
}
// static void setup_memread_mmap_pba8_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_41_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_pba8_41_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_42_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_42_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pba8_3_common
static void setup_memread_mmap_pba8_42_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i2", 0x1e28000);
}
// static void setup_memread_mmap_pba8_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_42_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_pba8_42_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_43_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_43_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i1", 0x1e28000);
}
// static void setup_memread_mmap_pba8_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_43_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_43_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_44_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_44_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_44_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x28000);
  init_map_file(0x12345601000, 0, "__i1", 0x26000);
}
// static void setup_memread_mmap_pba8_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_44_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_44_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_45_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_45_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_45_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i1", 0x1e28000);
}
// static void setup_memread_mmap_pba8_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_45_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_45_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_46_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_46_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_46_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x28000);
  init_map_file(0x12345601000, 1, "__i1", 0x26000);
}
// static void setup_memread_mmap_pba8_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_46_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_46_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_47_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_47_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_47_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x28000);
}
// static void setup_memread_mmap_pba8_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_47_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_47_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_48_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_48_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_48_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x28000);
}
// static void setup_memread_mmap_pba8_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_48_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_48_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_49_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_49_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_49_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
}
// static void setup_memread_mmap_pba8_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_49_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_49_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_50_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_50_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_50_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
}
// static void setup_memread_mmap_pba8_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_50_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_50_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_51_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_51_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_51_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_51_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
  init_map_file(0x12345601000, 0, "__i1", 0x985000);
}
// static void setup_memread_mmap_pba8_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_51_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_51_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_52_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_52_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_52_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_52_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
  init_map_file(0x12345601000, 1, "__i1", 0x985000);
}
// static void setup_memread_mmap_pba8_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_52_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_52_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_53_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_53_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_53_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_53_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_53_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_53_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_54_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_54_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_54_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_54_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_54_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_54_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_55_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_55_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_55_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_55_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_file(0x12345601000, 1, "__i1", 0x985000);
}
// static void setup_memread_mmap_pba8_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_55_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_55_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_56_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_56_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_56_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_56_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_file(0x12345601000, 0, "__i1", 0x985000);
}
// static void setup_memread_mmap_pba8_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_56_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_56_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_57_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_57_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_57_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_57_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_57_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_57_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_58_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_58_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_58_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_58_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_58_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_58_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_59_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_59_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d6000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_59_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_59_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
}
// static void setup_memread_mmap_pba8_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_59_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_59_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_60_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_60_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_60_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_60_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memread_mmap_pba8_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_60_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_60_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_61_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_61_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_61_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_memread_mmap_pba8_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_61_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_61_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_62_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_62_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pba8_3_common
static void setup_memread_mmap_pba8_62_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x781000);
  init_map_file(0x12345601000, 0, "__i2", 0x781000);
}
// static void setup_memread_mmap_pba8_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_62_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_pba8_62_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_63_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_63_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_pba8_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
// static void setup_memread_mmap_pba8_63_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
//   init_map_file(0x12345601000, 0, "__i1", 0x1e28000);
// }
// ^ See setup_memread_mmap_pba8_2_proc0
// static void setup_memread_mmap_pba8_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_63_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_63_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_64_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_64_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_pba8_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_64_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i1", 0x1e29000);
}
// static void setup_memread_mmap_pba8_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_64_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_64_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_65_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_65_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_65_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pba8_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_65_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_65_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_66_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_66_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_66_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_66_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pba8_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_66_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_66_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_67_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_67_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_67_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 167936, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x28000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_67_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_67_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_68_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_68_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_68_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 167936, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x28000);
  init_map_file(0x12345601000, 1, "__i1", 0x28000);
}
// static void setup_memread_mmap_pba8_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_68_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_68_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_69_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_69_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_69_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_69_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 167936, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x28000);
  init_map_file(0x12345601000, 1, "__i1", 0x26000);
}
// static void setup_memread_mmap_pba8_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_69_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_69_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_70_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_70_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pba8_3_common
static void setup_memread_mmap_pba8_70_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 167936, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x28000);
  init_map_file(0x12345601000, 1, "__i2", 0x2a000);
}
// static void setup_memread_mmap_pba8_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_70_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_pba8_70_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_71_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_71_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x986000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_71_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x986000);
  init_map_file(0x12345601000, 1, "__i0", 0x985000);
}
// static void setup_memread_mmap_pba8_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_71_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_71_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_72_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_72_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_pba8_72_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_72_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e29000);
}
// static void setup_memread_mmap_pba8_72_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_72_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_72_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_73_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_73_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_73_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_73_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_pba8_73_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_73_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_73_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_74_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_74_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_74_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_74_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x4d4000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_74_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_74_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_74_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_75_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_75_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_75_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_75_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_75_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_75_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_75_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_76_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_76_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_76_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_76_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_76_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_76_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_76_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_77_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_77_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_77_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_77_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i1", 0x4d5000);
}
// static void setup_memread_mmap_pba8_77_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_77_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_77_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_78_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_78_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_78_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pba8_3_common
static void setup_memread_mmap_pba8_78_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i2", 0x4d5000);
}
// static void setup_memread_mmap_pba8_78_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_78_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_pba8_78_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_79_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_79_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_79_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_79_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_79_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_79_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_79_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_80_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_80_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_80_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_80_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i1", 0x4d5000);
}
// static void setup_memread_mmap_pba8_80_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_80_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_80_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_81_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_81_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_81_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pba8_3_common
static void setup_memread_mmap_pba8_81_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i2", 0x4d5000);
}
// static void setup_memread_mmap_pba8_81_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_81_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_pba8_81_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_82_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_82_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_82_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_82_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_82_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_82_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_82_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_83_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_83_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_83_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_83_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_83_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_83_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_83_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_84_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_84_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_84_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_84_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_84_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_84_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_84_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_85_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_85_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_85_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_85_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_85_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_85_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_85_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_86_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_86_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_86_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_86_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_86_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_86_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_86_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_87_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_87_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_87_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_87_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memread_mmap_pba8_87_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_87_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_87_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_88_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_88_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_87_1
// static void setup_memread_mmap_pba8_88_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_88_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memread_mmap_pba8_88_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_88_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_88_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_89_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_89_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_87_1
// static void setup_memread_mmap_pba8_89_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_89_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_89_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_89_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_89_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_90_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_90_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2a000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_90_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_90_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e29000);
}
// static void setup_memread_mmap_pba8_90_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_90_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_90_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_91_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_91_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_74_1
// static void setup_memread_mmap_pba8_91_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_91_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d5000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pba8_91_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_91_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_91_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_92_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_92_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_pba8_92_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pba8_92_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1e28000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1e29000);
// }
// ^ See setup_memread_mmap_pba8_90_proc0
// static void setup_memread_mmap_pba8_92_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_92_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_92_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_93_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_93_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x98c000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static void setup_memread_mmap_pba8_93_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_mmap_pba8_93_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 10010624, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x98d000);
}
// static void setup_memread_mmap_pba8_93_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_93_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_93_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_94_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_94_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x98c000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_93_1
// static void setup_memread_mmap_pba8_94_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pba8_93_common
static void setup_memread_mmap_pba8_94_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 10010624, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x98d000);
}
// static void setup_memread_mmap_pba8_94_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_94_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_94_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_95_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_95_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_95_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_95_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_95_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_95_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_95_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_96_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_96_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_96_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_96_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_96_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_96_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_96_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_97_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_97_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_97_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_97_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_97_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_97_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_97_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_98_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_98_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_98_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_98_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_98_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_98_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_98_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_99_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_99_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_99_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_99_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_99_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_99_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_99_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_100_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_100_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_100_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_100_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_100_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_100_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_100_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_101_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_101_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_101_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_101_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_101_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_101_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_101_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_102_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_102_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_102_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_102_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_102_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_102_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_102_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_103_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_103_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_103_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_103_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_103_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_103_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_103_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_104_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_104_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_pba8_104_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_104_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_pba8_104_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_104_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_104_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_105_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_105_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x986000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_71_1
// static void setup_memread_mmap_pba8_105_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_105_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
  init_map_file(0x12345601000, 0, "__i0", 0x985000);
}
// static void setup_memread_mmap_pba8_105_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_105_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_105_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_106_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_106_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x986000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_71_1
// static void setup_memread_mmap_pba8_106_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_106_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
  init_map_file(0x12345601000, 1, "__i0", 0x985000);
}
// static void setup_memread_mmap_pba8_106_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_106_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_106_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_107_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_107_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x986000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_71_1
// static void setup_memread_mmap_pba8_107_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_107_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_file(0x12345601000, 0, "__i0", 0x985000);
}
// static void setup_memread_mmap_pba8_107_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_107_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_107_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_108_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_108_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x986000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_71_1
// static void setup_memread_mmap_pba8_108_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_108_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_file(0x12345601000, 1, "__i0", 0x985000);
}
// static void setup_memread_mmap_pba8_108_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_108_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_108_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_109_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_109_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_pba8_109_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_109_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_pba8_109_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_109_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_109_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_110_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_110_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_pba8_110_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pba8_110_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pba8_60_proc0
// static void setup_memread_mmap_pba8_110_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_110_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_110_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_111_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_111_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_111_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_111_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_111_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_111_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_111_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_112_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_112_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_59_1
// static void setup_memread_mmap_pba8_112_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pba8_112_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
//   init_map_file(0x12345601000, 0, "__i0", 0x4d5000);
// }
// ^ See setup_memread_mmap_pba8_75_proc0
// static void setup_memread_mmap_pba8_112_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_112_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_112_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_113_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_113_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_113_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_113_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x3000);
}
// static void setup_memread_mmap_pba8_113_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_113_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_113_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_114_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_114_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_114_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_114_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_pba8_114_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_114_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_114_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_115_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_115_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_115_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_115_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memread_mmap_pba8_115_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_115_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_115_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_116_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_116_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_116_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_116_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_pba8_116_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_116_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_116_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_117_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_117_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_pba8_117_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_117_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i1", 0x1e28000);
}
// static void setup_memread_mmap_pba8_117_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_117_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_117_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_118_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_118_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2a000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_90_1
// static void setup_memread_mmap_pba8_118_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_118_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e29000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pba8_118_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_118_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_118_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_119_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_119_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_119_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_119_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_119_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_119_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_119_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_120_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_120_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_119_1
// static void setup_memread_mmap_pba8_120_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_120_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_120_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_120_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_120_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_121_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_121_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_121_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_121_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_121_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_121_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_121_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_122_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_122_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_122_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_122_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_122_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_122_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_122_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_123_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_123_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_119_1
// static void setup_memread_mmap_pba8_123_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_123_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_123_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_123_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_123_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_124_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_124_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_124_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_124_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x781000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_124_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_124_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_124_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_125_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_125_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_125_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_125_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x781000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e29000);
}
// static void setup_memread_mmap_pba8_125_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_125_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_125_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_126_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_126_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_126_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_126_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x14a2000);
  init_map_file(0x12345601000, 1, "__i0", 0x14a2000);
}
// static void setup_memread_mmap_pba8_126_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_126_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_126_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_127_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_127_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_pba8_127_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_127_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memread_mmap_pba8_127_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_127_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_127_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_128_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_128_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_59_1
// static void setup_memread_mmap_pba8_128_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_128_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_128_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_128_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_128_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_129_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_129_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_119_1
// static void setup_memread_mmap_pba8_129_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_129_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_129_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_129_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_129_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_130_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_130_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_130_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_130_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9986048, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_file(0x12345601000, 0, "__i0", 0x985000);
}
// static void setup_memread_mmap_pba8_130_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_130_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_130_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_131_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_131_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_131_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_131_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9986048, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_file(0x12345601000, 1, "__i0", 0x985000);
}
// static void setup_memread_mmap_pba8_131_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_131_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_131_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_132_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_132_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_119_1
// static void setup_memread_mmap_pba8_132_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_132_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_132_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_132_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_132_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_133_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_133_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_133_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_133_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_133_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_133_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_133_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_134_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_134_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_134_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_134_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
  init_map_file(0x12345601000, 0, "__i0", 0x2297000);
}
// static void setup_memread_mmap_pba8_134_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_134_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_134_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_135_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_135_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x706000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_135_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_135_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x706000);
  init_map_file(0x12345601000, 1, "__i0", 0x705000);
}
// static void setup_memread_mmap_pba8_135_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_135_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_135_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_136_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_136_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x706000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_135_1
// static void setup_memread_mmap_pba8_136_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_136_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7360512, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x705000);
  init_map_file(0x12345601000, 1, "__i0", 0x704000);
}
// static void setup_memread_mmap_pba8_136_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_136_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_136_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_137_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_137_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x705000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_137_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_137_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x706000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_137_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_137_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_137_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_138_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_138_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x261000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_138_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_138_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2494464, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x261000);
  init_map_file(0x12345601000, 0, "__i0", 0x261000);
}
// static void setup_memread_mmap_pba8_138_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_138_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_138_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_139_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_139_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_139_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_139_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d4000);
}
// static void setup_memread_mmap_pba8_139_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_139_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_139_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_140_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_140_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_119_1
// static void setup_memread_mmap_pba8_140_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_140_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d4000);
}
// static void setup_memread_mmap_pba8_140_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_140_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_140_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_141_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_141_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_141_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pba8_141_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pba8_15_proc0
// static void setup_memread_mmap_pba8_141_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_141_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_141_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_142_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_142_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_142_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_142_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_142_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_142_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_142_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_143_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_143_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_143_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_143_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_143_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_143_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_143_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_144_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_144_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d4000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_144_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_144_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pba8_144_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_144_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_144_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_145_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_145_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_145_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_145_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_145_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_145_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_145_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_146_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_146_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_146_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_146_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_146_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_146_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_146_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_147_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_147_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_147_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_147_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_147_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_147_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_147_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_148_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_148_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_148_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_148_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pba8_148_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_148_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_148_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_149_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_149_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x261000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_138_1
// static void setup_memread_mmap_pba8_149_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_149_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2494464, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x261000);
  init_map_file(0x12345601000, 1, "__i0", 0x261000);
}
// static void setup_memread_mmap_pba8_149_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_149_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_149_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_150_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_150_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x29000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_150_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_150_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x28000);
  init_map_file(0x12345601000, 0, "__i0", 0x26000);
}
// static void setup_memread_mmap_pba8_150_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_150_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_150_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_151_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_151_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_151_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_151_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x28000);
  init_map_file(0x12345601000, 0, "__i1", 0x28000);
}
// static void setup_memread_mmap_pba8_151_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_151_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_151_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_152_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_152_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_152_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_152_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x29000);
  init_map_file(0x12345601000, 0, "__i0", 0x28000);
}
// static void setup_memread_mmap_pba8_152_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_152_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_152_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_153_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_153_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_153_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_153_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_file(0x12345601000, 0, "__i0", 0x986000);
}
// static void setup_memread_mmap_pba8_153_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_153_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_153_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_154_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_154_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_49_1
// static void setup_memread_mmap_pba8_154_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_154_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_file(0x12345601000, 1, "__i0", 0x986000);
}
// static void setup_memread_mmap_pba8_154_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_154_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_154_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_155_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_155_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_59_1
// static void setup_memread_mmap_pba8_155_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_155_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d5000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d4000);
}
// static void setup_memread_mmap_pba8_155_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_155_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_155_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_156_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_156_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_pba8_156_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_156_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pba8_156_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_156_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_156_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_157_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_157_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_157_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_157_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memread_mmap_pba8_157_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_157_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_157_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_158_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_158_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_pba8_158_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_158_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e29000);
}
// static void setup_memread_mmap_pba8_158_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_158_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_158_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_159_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_159_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x28000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_159_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_159_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x28000);
  init_map_file(0x12345601000, 0, "__i0", 0x27000);
}
// static void setup_memread_mmap_pba8_159_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_159_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_159_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_160_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_160_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_160_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pba8_160_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memread_mmap_pba8_160_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_160_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pba8_160_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_161_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_161_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_pba8_161_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_161_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_pba8_161_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_161_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_161_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_162_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_162_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_pba8_162_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
static void setup_memread_mmap_pba8_162_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i1", 0x2000);
}
// static void setup_memread_mmap_pba8_162_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_162_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pba8_162_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_163_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_163_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_150_1
// static void setup_memread_mmap_pba8_163_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_163_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x28000);
  init_map_file(0x12345601000, 1, "__i0", 0x27000);
}
// static void setup_memread_mmap_pba8_163_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_163_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_163_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_164_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_164_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_59_1
// static void setup_memread_mmap_pba8_164_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_164_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d4000);
}
// static void setup_memread_mmap_pba8_164_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_164_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_164_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_165_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_165_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_pba8_165_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_165_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e29000);
}
// static void setup_memread_mmap_pba8_165_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_165_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_165_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_166_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_166_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_14_1
// static void setup_memread_mmap_pba8_166_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_166_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x28000);
  init_map_file(0x12345601000, 1, "__i0", 0x26000);
}
// static void setup_memread_mmap_pba8_166_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_166_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_166_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_167_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_167_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x986000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_71_1
// static void setup_memread_mmap_pba8_167_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_167_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x987000);
  init_map_file(0x12345601000, 1, "__i0", 0x985000);
}
// static void setup_memread_mmap_pba8_167_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_167_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_167_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_168_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_168_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_15_1
// static void setup_memread_mmap_pba8_168_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_168_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e29000);
}
// static void setup_memread_mmap_pba8_168_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_168_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_168_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_169_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_169_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_pba8_169_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_169_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_pba8_169_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_169_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_169_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_170_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_170_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_170_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pba8_170_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1e29000);
// }
// ^ See setup_memread_mmap_pba8_158_proc0
// static void setup_memread_mmap_pba8_170_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_170_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_170_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_171_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_171_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x261000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_138_1
// static void setup_memread_mmap_pba8_171_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_171_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2494464, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x261000);
  init_map_file(0x12345601000, 0, "__i0", 0x261000);
}
// static void setup_memread_mmap_pba8_171_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_171_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_171_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_172_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_172_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_pba8_172_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pba8_172_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
//   init_map_file(0x12345601000, 1, "__i0", 0x1e29000);
// }
// ^ See setup_memread_mmap_pba8_168_proc0
// static void setup_memread_mmap_pba8_172_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_172_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_172_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_173_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_173_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x261000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_138_1
// static void setup_memread_mmap_pba8_173_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_173_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2494464, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x261000);
  init_map_file(0x12345601000, 1, "__i0", 0x261000);
}
// static void setup_memread_mmap_pba8_173_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_173_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_173_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_174_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_174_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_pba8_174_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_174_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_memread_mmap_pba8_174_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_174_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_174_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_175_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_175_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_141_1
// static void setup_memread_mmap_pba8_175_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_175_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_175_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_175_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_175_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_176_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_176_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x261000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_176_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_176_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2494464, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x261000);
}
// static void setup_memread_mmap_pba8_176_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_176_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_176_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_177_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pba8_177_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memread_mmap_pba8_177_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_177_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pba8_177_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_177_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_177_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_178_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_178_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_141_1
// static void setup_memread_mmap_pba8_178_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pba8_178_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
// }
// ^ See setup_memread_mmap_pba8_177_proc0
// static void setup_memread_mmap_pba8_178_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_178_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_178_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pba8_179_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pba8_179_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x261000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_176_1
// static void setup_memread_mmap_pba8_179_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pba8_179_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2494464, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x261000);
}
// static void setup_memread_mmap_pba8_179_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pba8_179_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pba8_179_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_pb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
// static void setup_memread_mmap_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb8_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_pb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
// static void setup_memread_mmap_pb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb8_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb6_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_pb6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
// static void setup_memread_mmap_pb6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb6_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb6_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_pb6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
// static void setup_memread_mmap_pb6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb6_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb6_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_pb6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
// static void setup_memread_mmap_pb6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb6_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb6_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_pb6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
// static void setup_memread_mmap_pb6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb6_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb3_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb3_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pb3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_0_common
// static void setup_memread_mmap_pb3_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbb_0_proc0
// static void setup_memread_mmap_pb3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pb3_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pb3_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb3_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb3_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pb3_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
// static void setup_memread_mmap_pb3_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
// }
// ^ See setup_memread_mmap_pbb_1_proc0
// static void setup_memread_mmap_pb3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pb3_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pb3_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb3_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb3_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pb3_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
// static void setup_memread_mmap_pb3_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pbb_2_proc0
// static void setup_memread_mmap_pb3_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pb3_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pb3_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb3_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb3_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pb3_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
// static void setup_memread_mmap_pb3_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
// }
// ^ See setup_memread_mmap_pbb_3_proc0
// static void setup_memread_mmap_pb3_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pb3_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pb3_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb3_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb3_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pb3_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
// static void setup_memread_mmap_pb3_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pbb_4_proc0
// static void setup_memread_mmap_pb3_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pb3_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pb3_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb3_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb3_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pb3_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
// static void setup_memread_mmap_pb3_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memread_mmap_pbb_5_proc0
// static void setup_memread_mmap_pb3_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pb3_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pb3_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb3_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb3_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pb3_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
// static void setup_memread_mmap_pb3_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pbb_6_proc0
// static void setup_memread_mmap_pb3_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pb3_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pb3_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb3_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb3_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pb3_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
// static void setup_memread_mmap_pb3_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memread_mmap_pbb_7_proc0
// static void setup_memread_mmap_pb3_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_pb3_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pb3_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_pb28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pba8_20_proc0
// static void setup_memread_mmap_pb28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_1_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e28000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pb28_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pb28_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pb28_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pb28_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pb28_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_pb28_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pb28_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_pb28_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pba8_109_proc0
// static void setup_memread_mmap_pb28_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_4_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d4000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pb28_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
}
// static void setup_memread_mmap_pb28_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_4_1
// static void setup_memread_mmap_pb28_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pb28_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pb28_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_6_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e27000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1e28000);
// }
// ^ See setup_memread_mmap_pba8_175_proc0
// static void setup_memread_mmap_pb28_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_4_1
// static void setup_memread_mmap_pb28_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pb28_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
}
// static void setup_memread_mmap_pb28_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_4_1
// static void setup_memread_mmap_pb28_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pb28_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x4d5000);
}
// static void setup_memread_mmap_pb28_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pb28_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_9_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x985000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x985000);
// }
// ^ See setup_memread_mmap_pba8_49_proc0
// static void setup_memread_mmap_pb28_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_10_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x985000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pb28_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9990144, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x987000);
}
// static void setup_memread_mmap_pb28_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_11_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4d4000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pb28_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d6000);
}
// static void setup_memread_mmap_pb28_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_12_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x26000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pb28_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_memread_mmap_pb28_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x26000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_12_1
// static void setup_memread_mmap_pb28_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pb28_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x27000);
}
// static void setup_memread_mmap_pb28_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pb28_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4d4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_11_1
// static void setup_memread_mmap_pb28_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
// }
// ^ See setup_memread_mmap_pb28_7_proc0
// static void setup_memread_mmap_pb28_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4d4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_11_1
// static void setup_memread_mmap_pb28_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
// static void setup_memread_mmap_pb28_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
// }
// ^ See setup_memread_mmap_pba8_59_proc0
// static void setup_memread_mmap_pb28_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_15_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pb28_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4d4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_11_1
// static void setup_memread_mmap_pb28_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
// }
// ^ See setup_memread_mmap_pb28_4_proc0
// static void setup_memread_mmap_pb28_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_17_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d5000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
// }
// ^ See setup_memread_mmap_pb28_7_proc0
// static void setup_memread_mmap_pb28_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_18_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_18_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_17_1
// static void setup_memread_mmap_pb28_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
// static void setup_memread_mmap_pb28_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
// }
// ^ See setup_memread_mmap_pba8_59_proc0
// static void setup_memread_mmap_pb28_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_18_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pb28_18_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_19_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_19_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2298000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pb28_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2297000);
}
// static void setup_memread_mmap_pb28_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_19_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_20_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_20_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2298000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_19_1
// static void setup_memread_mmap_pb28_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pb28_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2297000);
}
// static void setup_memread_mmap_pb28_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_20_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pb28_20_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_21_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_21_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e28000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pba8_17_proc0
// static void setup_memread_mmap_pb28_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_21_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_22_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_22_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_21_1
// static void setup_memread_mmap_pb28_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pb28_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pb28_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_22_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pb28_22_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_23_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_23_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x985000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_9_1
// static void setup_memread_mmap_pb28_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x985000);
// }
// ^ See setup_memread_mmap_pba8_50_proc0
// static void setup_memread_mmap_pb28_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_23_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_24_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_24_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x985000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_10_1
// static void setup_memread_mmap_pb28_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x985000);
// }
// ^ See setup_memread_mmap_pba8_49_proc0
// static void setup_memread_mmap_pb28_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_24_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_25_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pb28_25_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x27000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pb28_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pb28_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 147456, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x28000);
}
// static void setup_memread_mmap_pb28_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_25_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_26_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_26_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pb28_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pba8_60_proc0
// static void setup_memread_mmap_pb28_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_26_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb28_27_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb28_27_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x985000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_10_1
// static void setup_memread_mmap_pb28_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb28_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x985000);
// }
// ^ See setup_memread_mmap_pba8_50_proc0
// static void setup_memread_mmap_pb28_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb28_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb28_27_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
// static void setup_memread_mmap_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pb0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pb0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_pb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
// static void setup_memread_mmap_pb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pb0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pb0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pac_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
// static void setup_memread_mmap_pac_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pac_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pac_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pac_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pac_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pac_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pac_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_1_proc0
// static void setup_memread_mmap_pac_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pac_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x2298000);
}
static void setup_memread_mmap_pac_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x2297000);
}
// static void setup_memread_mmap_pac_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pac_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x2298000);
// }
// ^ See setup_memread_mmap_pac_3_proc0
// static void setup_memread_mmap_pac_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pac_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pac_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
// static void setup_memread_mmap_pac_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
// static void setup_memread_mmap_pac_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
// static void setup_memread_mmap_pac_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
static void setup_memread_mmap_pac_6_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_memread_mmap_pac_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pac_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pac_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
static void setup_memread_mmap_pac_7_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x22000);
}
// static void setup_memread_mmap_pac_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pac_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
// static void setup_memread_mmap_pac_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pac_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
// static void setup_memread_mmap_pac_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
static void setup_memread_mmap_pac_9_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x22000);
}
// static void setup_memread_mmap_pac_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pac_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pac_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
static void setup_memread_mmap_pac_10_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x22000);
}
// static void setup_memread_mmap_pac_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pac_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_1_proc0
// static void setup_memread_mmap_pac_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_2_proc0
// static void setup_memread_mmap_pac_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pac_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_pac_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_pac_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
// static void setup_memread_mmap_pac_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
// static void setup_memread_mmap_pac_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x26000);
// }
// ^ See setup_memread_mmap_pac_6_proc1
// static void setup_memread_mmap_pac_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pac_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pac_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
// static void setup_memread_mmap_pac_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_pac_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pac_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
// static void setup_memread_mmap_pac_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
// static void setup_memread_mmap_pac_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pbc_5_common
// static void setup_memread_mmap_pac_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
static void setup_memread_mmap_pac_16_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_memread_mmap_pac_16_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_pac_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pac_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pac_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_pac_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pac_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
static void setup_memread_mmap_pac_17_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x16000);
}
// static void setup_memread_mmap_pac_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pac_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pab_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pab_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pab_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_0_common
static void setup_memread_mmap_pab_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_memread_mmap_pab_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pab_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pab_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pab_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pab_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pab_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
static void setup_memread_mmap_pab_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pab_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pab_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pab_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pab_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pab_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pab_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
static void setup_memread_mmap_pab_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pab_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pab_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pab_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pab_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pab_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pab_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
// static void setup_memread_mmap_pab_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
// }
// ^ See setup_memread_mmap_pab_1_proc0
// static void setup_memread_mmap_pab_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pab_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pab_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pab_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pab_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pab_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
static void setup_memread_mmap_pab_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_memread_mmap_pab_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pab_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pab_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pab_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pab_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pab_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
static void setup_memread_mmap_pab_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_pab_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pab_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pab_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pab_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pab_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pab_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
// static void setup_memread_mmap_pab_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pab_4_proc0
// static void setup_memread_mmap_pab_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pab_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pab_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pab_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pab_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_pab_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
// static void setup_memread_mmap_pab_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memread_mmap_pab_5_proc0
// static void setup_memread_mmap_pab_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pab_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pab_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_paa_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_paa_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_paa_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_paa_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
static void setup_memread_mmap_paa_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_paa_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_paa_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_paa_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_paa_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_paa_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_paa_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
static void setup_memread_mmap_paa_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_paa_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_paa_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_paa_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_paa_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_paa_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_paa_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memread_mmap_paa_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_1_proc1
// static void setup_memread_mmap_paa_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_paa_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_paa_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_paa_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_paa_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_paa_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_1_proc0
static void setup_memread_mmap_paa_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_paa_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_paa_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_paa_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_paa_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_paa_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_paa_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_2_proc0
// static void setup_memread_mmap_paa_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_1_proc1
// static void setup_memread_mmap_paa_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_paa_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_paa_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_paa_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_paa_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_paa_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_2_proc0
// static void setup_memread_mmap_paa_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_3_proc1
// static void setup_memread_mmap_paa_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_paa_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_pa8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
// static void setup_memread_mmap_pa8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_pa8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
// static void setup_memread_mmap_pa8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pa8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa8_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa6_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_pa6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_1_proc0
// static void setup_memread_mmap_pa6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pa6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa6_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa6_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_pa6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_2_proc0
// static void setup_memread_mmap_pa6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pa6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa6_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa6_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_pa6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_1_proc0
// static void setup_memread_mmap_pa6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pa6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa6_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa6_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_pa6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_2_proc0
// static void setup_memread_mmap_pa6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pa6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa6_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa3_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa3_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pa3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_0_common
// static void setup_memread_mmap_pa3_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pab_0_proc0
// static void setup_memread_mmap_pa3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pa3_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pa3_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa3_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa3_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pa3_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
// static void setup_memread_mmap_pa3_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
// }
// ^ See setup_memread_mmap_pab_1_proc0
// static void setup_memread_mmap_pa3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pa3_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pa3_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa3_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa3_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pa3_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
// static void setup_memread_mmap_pa3_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pab_2_proc0
// static void setup_memread_mmap_pa3_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pa3_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pa3_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa3_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa3_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pa3_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
// static void setup_memread_mmap_pa3_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
// }
// ^ See setup_memread_mmap_pab_1_proc0
// static void setup_memread_mmap_pa3_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pa3_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pa3_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa3_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa3_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pa3_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
// static void setup_memread_mmap_pa3_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pab_4_proc0
// static void setup_memread_mmap_pa3_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pa3_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pa3_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa3_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa3_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pa3_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
// static void setup_memread_mmap_pa3_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memread_mmap_pab_5_proc0
// static void setup_memread_mmap_pa3_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_pa3_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pa3_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa3_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa3_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pa3_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_2_common
// static void setup_memread_mmap_pa3_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pab_4_proc0
// static void setup_memread_mmap_pa3_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pa3_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_pa3_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa3_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa3_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_pa3_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pbb_1_common
// static void setup_memread_mmap_pa3_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memread_mmap_pab_5_proc0
// static void setup_memread_mmap_pa3_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_pa3_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_pa3_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_pa28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
// }
// ^ See setup_memread_mmap_pac_1_proc0
// static void setup_memread_mmap_pa28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_1_proc1
// static void setup_memread_mmap_pa28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_pa28_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pa28_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_pa28_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_pa28_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_17_1
// static void setup_memread_mmap_pa28_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pa28_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x4d4000);
}
static void setup_memread_mmap_pa28_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_pa28_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pa28_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_17_1
// static void setup_memread_mmap_pa28_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pa28_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
}
// static void setup_memread_mmap_pa28_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_2_proc1
// static void setup_memread_mmap_pa28_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pa28_4_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d6000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pa28_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pa28_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x4d5000);
}
// static void setup_memread_mmap_pa28_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_0_proc1
// static void setup_memread_mmap_pa28_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pa28_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x985000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_9_1
// static void setup_memread_mmap_pa28_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pa28_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
}
static void setup_memread_mmap_pa28_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9986048, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_pa28_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_17_1
// static void setup_memread_mmap_pa28_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pa28_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
}
static void setup_memread_mmap_pa28_6_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_pa28_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_1_1
// static void setup_memread_mmap_pa28_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_1_proc0
// static void setup_memread_mmap_pa28_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_pa28_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pa28_8_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pa28_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pa28_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
static void setup_memread_mmap_pa28_8_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_pa28_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pa28_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pa28_8_1
// static void setup_memread_mmap_pa28_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
// static void setup_memread_mmap_pa28_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_8_proc0
static void setup_memread_mmap_pa28_9_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_pa28_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pa28_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pa28_8_1
// static void setup_memread_mmap_pa28_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pa28_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memread_mmap_pa28_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_pa28_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_1_1
// static void setup_memread_mmap_pa28_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_pa28_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_pa28_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pa28_8_1
// static void setup_memread_mmap_pa28_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_pa28_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_pa28_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_1_1
// static void setup_memread_mmap_pa28_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_pa28_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_pa28_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pa28_14_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pa28_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_1_proc0
// static void setup_memread_mmap_pa28_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_pa28_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pa28_14_1
// static void setup_memread_mmap_pa28_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_1_proc0
// static void setup_memread_mmap_pa28_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_9_proc1
// static void setup_memread_mmap_pa28_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pa28_16_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e29000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pa28_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pa28_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
}
// static void setup_memread_mmap_pa28_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_3_proc1
// static void setup_memread_mmap_pa28_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pa28_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x985000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_10_1
// static void setup_memread_mmap_pa28_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pa28_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x986000);
}
// static void setup_memread_mmap_pa28_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_1_proc1
// static void setup_memread_mmap_pa28_17_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pa28_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_18_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pa28_18_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4d5000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pa28_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pa28_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x4d5000);
}
// static void setup_memread_mmap_pa28_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_0_proc1
// static void setup_memread_mmap_pa28_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_18_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_19_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_19_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pa28_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_1_proc0
// static void setup_memread_mmap_pa28_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_pa28_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_19_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_20_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
static int test_memread_mmap_pa28_20_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2297000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_pa28_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x2297000);
// }
// ^ See setup_memread_mmap_pac_3_proc1
static void setup_memread_mmap_pa28_20_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_pa28_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_20_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_21_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_21_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pa28_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_pa28_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_pa28_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_21_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_22_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_22_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pa28_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
// static void setup_memread_mmap_pa28_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_8_proc0
// static void setup_memread_mmap_pa28_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_pa28_22_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pa28_22_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_23_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_23_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pc5_2_1
// static void setup_memread_mmap_pa28_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_pa28_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_pa28_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_23_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_24_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_24_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_pa28_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_pa28_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_pa28_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_24_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_25_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_25_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x985000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_10_1
// static void setup_memread_mmap_pa28_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_pa28_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x986000);
}
// static void setup_memread_mmap_pa28_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_1_proc1
// static void setup_memread_mmap_pa28_25_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_pa28_25_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_26_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_26_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x985000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_10_1
// static void setup_memread_mmap_pa28_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_pa28_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x986000);
}
// static void setup_memread_mmap_pa28_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_1_proc1
// static void setup_memread_mmap_pa28_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_26_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa28_27_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa28_27_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4d4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_11_1
// static void setup_memread_mmap_pa28_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa28_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
// }
// ^ See setup_memread_mmap_pa28_6_proc0
// static void setup_memread_mmap_pa28_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_paa_0_proc1
// static void setup_memread_mmap_pa28_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa28_27_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_1_proc0
// static void setup_memread_mmap_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_pa0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_pbc_0_0
// static int test_memread_mmap_pa0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_pa0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_pa0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_mmap_pbc_3_proc0
// static void setup_memread_mmap_pa0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_pa0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_pa0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9f0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9f0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p9f0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9f0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9f0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9f0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9f0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9f0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p9f0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9f0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9f0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9f0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9f0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
static void setup_memread_mmap_p9c_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9c_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p9c_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
static void setup_memread_mmap_p9c_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9c_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p9c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9c_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p9c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_1_proc0
// static void setup_memread_mmap_p9c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_2_common
static void setup_memread_mmap_p9c_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_p9c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9c_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p9c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_p9c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
static void setup_memread_mmap_p9c_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9c_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i1", 0x4000);
}
// static void setup_memread_mmap_p9c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9c_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
static void setup_memread_mmap_p9c_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9c_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9c_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9c_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9c_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p9c_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9c_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9c_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9c_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p9c_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9c_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_2_common
static void setup_memread_mmap_p9c_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p9c_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9c_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9c_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9c_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9c_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9c_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_16_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p9c_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9c_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9c_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9c_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p9c_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9c_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9c_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9c_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9c_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9b_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9b_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
static void setup_memread_mmap_p9b_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_mmap_p9b_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9b_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p9b_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p9b_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9b_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9b_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
static void setup_memread_mmap_p9b_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_mmap_p9b_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p9b_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p9b_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p9b_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9b_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9b_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p9b_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
static void setup_memread_mmap_p9b_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_p9b_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p9b_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p9b_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9b_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9b_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p9b_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
static void setup_memread_mmap_p9b_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9b_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p9b_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p9b_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9b_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9b_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p9b_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
static void setup_memread_mmap_p9b_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p9b_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p9b_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p9b_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9b_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9b_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p9b_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
static void setup_memread_mmap_p9b_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9b_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p9b_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p9b_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9b_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9b_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p9b_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
static void setup_memread_mmap_p9b_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_p9b_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p9b_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p9b_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9b_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9b_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p9b_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
static void setup_memread_mmap_p9b_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9b_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p9b_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p9b_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf44_0_1
static void setup_memread_mmap_p9a4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
}
// static void setup_memread_mmap_p9a4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9a4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p9a4_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i1", 0x6000);
}
// static void setup_memread_mmap_p9a4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
static void setup_memread_mmap_p9a4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i2", 0x6000);
}
// static void setup_memread_mmap_p9a4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_3_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_p9a4_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p9a4_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf44_0_1
static void setup_memread_mmap_p9a4_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x5000);
}
// static void setup_memread_mmap_p9a4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf44_0_1
// static void setup_memread_mmap_p9a4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_5_common
static void setup_memread_mmap_p9a4_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_memread_mmap_p9a4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p9a4_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x26000);
}
// static void setup_memread_mmap_p9a4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p9a4_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i1", 0x6000);
}
// static void setup_memread_mmap_p9a4_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_3_common
static void setup_memread_mmap_p9a4_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i2", 0x6000);
}
// static void setup_memread_mmap_p9a4_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_10_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_p9a4_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p9a4_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p9a4_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
}
// static void setup_memread_mmap_p9a4_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p9a4_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
}
// static void setup_memread_mmap_p9a4_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
static void setup_memread_mmap_p9a4_14_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_2_1
// static void setup_memread_mmap_p9a4_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
static void setup_memread_mmap_p9a4_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_15_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_16_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2298000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
static void setup_memread_mmap_p9a4_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2298000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_16_1
// static void setup_memread_mmap_p9a4_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
static void setup_memread_mmap_p9a4_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_17_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_18_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_18_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2298000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_16_1
// static void setup_memread_mmap_p9a4_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
static void setup_memread_mmap_p9a4_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_18_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_18_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_19_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_19_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2298000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_16_1
// static void setup_memread_mmap_p9a4_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
static void setup_memread_mmap_p9a4_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_19_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_19_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_20_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_20_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2298000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_16_1
// static void setup_memread_mmap_p9a4_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
static void setup_memread_mmap_p9a4_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_20_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_20_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_21_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_21_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2c000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memread_mmap_p9a4_21_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31637504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
}
// static void setup_memread_mmap_p9a4_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_21_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_22_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_22_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2c000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_21_1
static void setup_memread_mmap_p9a4_22_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31637504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i1", 0x4000);
}
// static void setup_memread_mmap_p9a4_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_22_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_22_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_23_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_23_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2e000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p9a4_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 184320, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
}
// static void setup_memread_mmap_p9a4_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_23_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_23_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_24_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_24_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
static void setup_memread_mmap_p9a4_24_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_p9a4_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_24_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_24_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_25_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_25_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
static void setup_memread_mmap_p9a4_25_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_memread_mmap_p9a4_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_25_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_25_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_26_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_26_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
static void setup_memread_mmap_p9a4_26_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p9a4_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_26_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_26_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_27_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_27_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_26_common
static void setup_memread_mmap_p9a4_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_27_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_27_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_28_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_28_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
static void setup_memread_mmap_p9a4_28_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memread_mmap_p9a4_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_file(0x12345601000, 1, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_pba8_99_proc0
// static void setup_memread_mmap_p9a4_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_28_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_28_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_29_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_29_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
static void setup_memread_mmap_p9a4_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_p9a4_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_29_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_29_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_30_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_30_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
static void setup_memread_mmap_p9a4_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x28000);
}
// static void setup_memread_mmap_p9a4_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_30_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_30_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_31_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_31_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
static void setup_memread_mmap_p9a4_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_31_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_31_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_32_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_32_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
static void setup_memread_mmap_p9a4_32_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i2", 0x29000);
}
// static void setup_memread_mmap_p9a4_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_32_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_p9a4_32_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_33_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_33_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_32_common
static void setup_memread_mmap_p9a4_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i2", 0x29000);
}
// static void setup_memread_mmap_p9a4_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_33_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_p9a4_33_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_34_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_34_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_26_common
static void setup_memread_mmap_p9a4_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_p9a4_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_34_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_34_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_35_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_35_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p9a4_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x2d000);
}
// static void setup_memread_mmap_p9a4_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_35_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_35_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_36_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_36_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_32_common
static void setup_memread_mmap_p9a4_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i2", 0x1000);
}
// static void setup_memread_mmap_p9a4_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_36_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_p9a4_36_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_37_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_37_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_26_common
static void setup_memread_mmap_p9a4_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_p9a4_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_37_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_37_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_38_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_38_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
// static void setup_memread_mmap_p9a4_38_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_file(0x12345601000, 0, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_pba8_98_proc0
// static void setup_memread_mmap_p9a4_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_38_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_38_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_39_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_39_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_26_common
static void setup_memread_mmap_p9a4_39_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_p9a4_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_39_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_39_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_40_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_40_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_26_common
static void setup_memread_mmap_p9a4_40_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_40_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_40_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_41_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_41_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_26_common
static void setup_memread_mmap_p9a4_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_41_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_41_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_42_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_42_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_p9a4_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_2_common
// static void setup_memread_mmap_p9a4_42_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_pba8_104_proc0
// static void setup_memread_mmap_p9a4_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_42_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_42_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_43_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_43_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_25_common
static void setup_memread_mmap_p9a4_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_p9a4_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_43_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_43_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_44_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_44_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_44_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_44_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_44_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_45_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_45_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_45_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_45_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_45_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_46_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_46_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_24_common
static void setup_memread_mmap_p9a4_46_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i1", 0x5000);
}
// static void setup_memread_mmap_p9a4_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_46_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_46_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_47_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_47_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_24_common
static void setup_memread_mmap_p9a4_47_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i1", 0x5000);
}
// static void setup_memread_mmap_p9a4_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_47_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_47_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_48_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_48_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_48_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_48_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_48_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_49_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_49_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_49_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_49_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_49_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_50_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_50_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_24_common
static void setup_memread_mmap_p9a4_50_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 0, "__i1", 0x5000);
}
// static void setup_memread_mmap_p9a4_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_50_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_50_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_51_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_51_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_51_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_51_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_51_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_51_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_52_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_52_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_52_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_52_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_52_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_52_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_53_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_53_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_87_1
static void setup_memread_mmap_p9a4_53_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_53_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_53_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_53_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_54_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_54_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_87_1
// static void setup_memread_mmap_p9a4_54_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p9a4_54_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_p9a4_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_54_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_54_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_55_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_55_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
static void setup_memread_mmap_p9a4_55_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_55_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 180224, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_memread_mmap_p9a4_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_55_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_55_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_56_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_56_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_56_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p9a4_56_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_memread_mmap_p9a4_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_56_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_56_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_57_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_57_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
static void setup_memread_mmap_p9a4_57_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_57_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31641600, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x5000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e2d000);
}
// static void setup_memread_mmap_p9a4_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_57_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_57_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_58_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_58_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_58_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
static void setup_memread_mmap_p9a4_58_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_58_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_58_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_59_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_59_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
static void setup_memread_mmap_p9a4_59_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_59_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i1", 0x5000);
}
// static void setup_memread_mmap_p9a4_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_59_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_59_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_60_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_60_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_60_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p9a4_60_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 167936, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x28000);
}
// static void setup_memread_mmap_p9a4_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_60_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_60_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_61_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_61_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p9a4_61_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_61_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_61_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_62_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_62_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_62_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_62_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_62_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_63_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_63_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_63_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 172032, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x2b000);
}
// static void setup_memread_mmap_p9a4_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_63_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_63_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_64_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_64_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_64_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 172032, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_64_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_64_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_65_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_65_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p9a4_65_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_65_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_65_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_66_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_66_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_66_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_66_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_66_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_66_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_67_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_67_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_67_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_67_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_67_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_68_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_68_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_68_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_p9a4_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_68_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_68_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_69_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_69_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_69_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_69_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31637504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e2c000);
}
// static void setup_memread_mmap_p9a4_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_69_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_69_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_70_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_70_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_70_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_p9a4_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_70_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_70_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_71_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_71_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_6_common
static void setup_memread_mmap_p9a4_71_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_p9a4_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_71_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_71_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_72_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_72_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_72_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_72_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_72_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_72_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_72_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_73_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_73_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
static void setup_memread_mmap_p9a4_73_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_73_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x4000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_p9a4_73_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_73_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_73_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_74_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_74_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
static void setup_memread_mmap_p9a4_74_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_74_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x4000);
  init_map_file(0x12345601000, 1, "__i2", 0x1000);
}
// static void setup_memread_mmap_p9a4_74_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_74_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_p9a4_74_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_75_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_75_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_75_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_73_common
static void setup_memread_mmap_p9a4_75_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x4000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_p9a4_75_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_75_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_75_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_76_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_76_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_76_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_73_common
static void setup_memread_mmap_p9a4_76_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x4000);
  init_map_file(0x12345601000, 1, "__i1", 0x4000);
}
// static void setup_memread_mmap_p9a4_76_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_76_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_76_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_77_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_77_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_77_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
static void setup_memread_mmap_p9a4_77_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_77_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_77_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_77_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_78_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_78_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_78_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p9a4_78_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_memread_mmap_p9a4_78_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_78_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_78_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_79_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_79_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_79_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
// static void setup_memread_mmap_p9a4_79_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
// }
// ^ See setup_memread_mmap_p9a4_78_proc0
// static void setup_memread_mmap_p9a4_79_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_79_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_79_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_80_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_80_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_80_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9a4_80_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_80_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_80_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_80_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_81_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_81_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_87_1
// static void setup_memread_mmap_p9a4_81_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_6_common
static void setup_memread_mmap_p9a4_81_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 172032, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i1", 0x3000);
}
// static void setup_memread_mmap_p9a4_81_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_81_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_81_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_82_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_82_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
static void setup_memread_mmap_p9a4_82_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_82_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_p9a4_82_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_82_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_82_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_83_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_83_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_87_1
// static void setup_memread_mmap_p9a4_83_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_83_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 172032, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_83_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_83_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_83_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_84_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_84_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_87_1
// static void setup_memread_mmap_p9a4_84_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_84_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 172032, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_84_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_84_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_84_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_85_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_85_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_85_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
static void setup_memread_mmap_p9a4_85_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_85_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_85_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_85_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_86_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_86_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_86_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p9a4_86_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_86_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_86_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_86_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_87_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_87_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_87_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p9a4_87_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_87_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_87_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_87_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_88_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_88_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_88_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9a4_88_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_88_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_88_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_88_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_89_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_89_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_89_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p9a4_89_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
  init_map_file(0x12345601000, 1, "__i0", 0x2c000);
}
// static void setup_memread_mmap_p9a4_89_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_89_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_89_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_90_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_90_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_90_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p9a4_90_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_90_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_90_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_90_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_91_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_91_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_91_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_26_common
static void setup_memread_mmap_p9a4_91_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_91_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_91_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_91_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_92_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_92_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_92_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_92_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_92_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_92_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_92_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_93_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_93_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0xa000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_93_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p9a4_93_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
  init_map_file(0x12345601000, 1, "__i0", 0xa000);
}
// static void setup_memread_mmap_p9a4_93_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_93_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_93_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_94_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_94_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2d000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_94_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_94_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31637504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e2c000);
}
// static void setup_memread_mmap_p9a4_94_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_94_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_94_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_95_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_95_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_95_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_95_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_95_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_95_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_95_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_96_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_96_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_96_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9a4_96_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_96_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_96_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_96_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_97_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_97_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2c000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_97_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_97_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i0", 0x2b000);
}
// static void setup_memread_mmap_p9a4_97_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_97_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_97_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_98_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_98_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_98_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_98_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_98_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_98_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_98_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_99_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_99_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_99_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_99_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 176128, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_99_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_99_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_99_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_100_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_100_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_100_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_22_common
static void setup_memread_mmap_p9a4_100_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p9a4_100_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_100_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_100_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_101_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_101_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d9000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_101_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_101_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5083136, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d9000);
}
// static void setup_memread_mmap_p9a4_101_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_101_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_101_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_102_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_102_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_102_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_102_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_102_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_102_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_102_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_103_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_103_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_103_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_103_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4000);
}
// static void setup_memread_mmap_p9a4_103_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_103_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_103_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_104_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_104_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2c000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_97_1
// static void setup_memread_mmap_p9a4_104_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_104_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 180224, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_104_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_104_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_104_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_105_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_105_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_105_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_105_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_105_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_105_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_105_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_106_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_106_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d9000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_101_1
// static void setup_memread_mmap_p9a4_106_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_73_common
static void setup_memread_mmap_p9a4_106_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5083136, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d9000);
}
// static void setup_memread_mmap_p9a4_106_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_106_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_106_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_107_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_107_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2c000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_97_1
// static void setup_memread_mmap_p9a4_107_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_22_common
static void setup_memread_mmap_p9a4_107_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 180224, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i1", 0x2b000);
}
// static void setup_memread_mmap_p9a4_107_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_107_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_107_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_108_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_108_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_108_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_22_common
static void setup_memread_mmap_p9a4_108_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_p9a4_108_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_108_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_108_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_109_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_109_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2c000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_97_1
// static void setup_memread_mmap_p9a4_109_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_109_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 180224, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i0", 0x2b000);
}
// static void setup_memread_mmap_p9a4_109_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_109_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_109_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_110_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_110_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2c000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_21_1
// static void setup_memread_mmap_p9a4_110_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_110_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31637504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4000);
}
// static void setup_memread_mmap_p9a4_110_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_110_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_110_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_111_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_111_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d9000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_101_1
// static void setup_memread_mmap_p9a4_111_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_111_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5083136, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d9000);
}
// static void setup_memread_mmap_p9a4_111_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_111_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_111_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_112_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_112_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_112_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_112_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_112_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_112_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_112_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_113_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_113_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_113_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_113_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4000);
}
// static void setup_memread_mmap_p9a4_113_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_113_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_113_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_114_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_114_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_114_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_114_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_114_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_114_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_114_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_115_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_115_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_115_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_115_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_115_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_115_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_115_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_116_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_116_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2c000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_97_1
// static void setup_memread_mmap_p9a4_116_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_73_common
static void setup_memread_mmap_p9a4_116_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 184320, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4000);
  init_map_file(0x12345601000, 0, "__i0", 0x2b000);
}
// static void setup_memread_mmap_p9a4_116_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_116_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_116_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_117_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_117_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_117_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_22_common
static void setup_memread_mmap_p9a4_117_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i1", 0x4000);
}
// static void setup_memread_mmap_p9a4_117_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_117_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_117_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_118_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_118_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_118_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_22_common
static void setup_memread_mmap_p9a4_118_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 176128, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i1", 0x4000);
}
// static void setup_memread_mmap_p9a4_118_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_118_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_118_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_119_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_119_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_119_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_119_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4000);
}
// static void setup_memread_mmap_p9a4_119_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_119_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_119_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_120_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_120_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2c000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_97_1
// static void setup_memread_mmap_p9a4_120_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_120_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 184320, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4000);
  init_map_file(0x12345601000, 0, "__i0", 0x2b000);
}
// static void setup_memread_mmap_p9a4_120_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_120_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_120_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_121_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_121_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4db000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_121_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p9a4_121_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5087232, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x4da000);
}
// static void setup_memread_mmap_p9a4_121_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_121_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_121_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_122_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_122_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2d000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_94_1
// static void setup_memread_mmap_p9a4_122_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p9a4_122_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31645696, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e2d000);
}
// static void setup_memread_mmap_p9a4_122_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_122_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_122_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_123_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_123_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2a000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memread_mmap_p9a4_123_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_123_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x29000);
}
// static void setup_memread_mmap_p9a4_123_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_123_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_123_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_124_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_124_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2a000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_90_1
// static void setup_memread_mmap_p9a4_124_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_123_common
static void setup_memread_mmap_p9a4_124_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e2a000);
}
// static void setup_memread_mmap_p9a4_124_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_124_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_124_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_125_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_125_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_125_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p9a4_125_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x4000);
}
// static void setup_memread_mmap_p9a4_125_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_125_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_125_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_126_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_126_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_126_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p9a4_126_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x4000);
}
// static void setup_memread_mmap_p9a4_126_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_126_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_126_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_127_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_127_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_35_1
// static void setup_memread_mmap_p9a4_127_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p9a4_127_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x5000);
}
// static void setup_memread_mmap_p9a4_127_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_127_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_127_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_128_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_128_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_69_1
// static void setup_memread_mmap_p9a4_128_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_57_common
static void setup_memread_mmap_p9a4_128_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
  init_map_file(0x12345601000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_128_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_128_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_128_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_129_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_129_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf44_0_1
// static void setup_memread_mmap_p9a4_129_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_129_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_memread_mmap_p9a4_129_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_129_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_129_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_130_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_130_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_130_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_130_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_130_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_130_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_130_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_131_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_131_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_131_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_131_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_131_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_131_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_131_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_132_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_132_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_132_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_132_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
}
// static void setup_memread_mmap_p9a4_132_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_132_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_132_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_133_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_133_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_132_1
// static void setup_memread_mmap_p9a4_133_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
static void setup_memread_mmap_p9a4_133_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4000);
}
// static void setup_memread_mmap_p9a4_133_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_133_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_133_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_134_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_134_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_132_1
// static void setup_memread_mmap_p9a4_134_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_134_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_134_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_134_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_134_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_135_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_135_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
static void setup_memread_mmap_p9a4_135_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_mmap_p9a4_135_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 0, "__i2", 0x26000);
}
// static void setup_memread_mmap_p9a4_135_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_135_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_p9a4_135_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_136_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_136_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_136_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_53_common
static void setup_memread_mmap_p9a4_136_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 0, "__i1", 0x26000);
}
// static void setup_memread_mmap_p9a4_136_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_136_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_136_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_137_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_137_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_137_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_53_common
static void setup_memread_mmap_p9a4_137_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 0, "__i1", 0x3000);
}
// static void setup_memread_mmap_p9a4_137_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_137_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_137_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_138_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_138_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_138_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_53_common
static void setup_memread_mmap_p9a4_138_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_138_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_138_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_138_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_139_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_139_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_139_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_135_common
static void setup_memread_mmap_p9a4_139_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 1, "__i2", 0x26000);
}
// static void setup_memread_mmap_p9a4_139_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_139_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pba8_3_final
// static void setup_memread_mmap_p9a4_139_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_140_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_140_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_140_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_53_common
static void setup_memread_mmap_p9a4_140_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 1, "__i1", 0x26000);
}
// static void setup_memread_mmap_p9a4_140_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_140_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_140_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_141_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_141_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_141_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_53_common
static void setup_memread_mmap_p9a4_141_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 1, "__i1", 0x3000);
}
// static void setup_memread_mmap_p9a4_141_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_141_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_141_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_142_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_142_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_142_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_53_common
static void setup_memread_mmap_p9a4_142_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_142_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_142_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p9a4_142_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_143_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_143_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_143_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_6_common
static void setup_memread_mmap_p9a4_143_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i1", 0x26000);
}
// static void setup_memread_mmap_p9a4_143_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_143_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_143_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_144_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_144_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_144_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_144_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x26000);
}
// static void setup_memread_mmap_p9a4_144_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_144_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_144_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_145_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_145_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_145_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_145_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_145_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_145_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_145_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_146_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_146_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_146_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_146_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_146_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_146_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_146_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_147_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_147_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_147_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_147_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x26000);
}
// static void setup_memread_mmap_p9a4_147_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_147_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_147_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_148_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_148_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_148_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_148_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_148_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_148_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_148_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_149_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_149_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_149_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_149_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_149_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_149_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_149_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_150_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_150_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_150_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_150_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_150_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_150_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_150_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_151_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_151_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_151_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_151_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_151_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_151_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_151_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_152_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_152_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_132_1
// static void setup_memread_mmap_p9a4_152_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p9a4_152_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
}
// static void setup_memread_mmap_p9a4_152_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_152_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_152_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_153_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_153_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_153_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_6_common
static void setup_memread_mmap_p9a4_153_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5079040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i1", 0x4d8000);
}
// static void setup_memread_mmap_p9a4_153_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_153_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_153_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_154_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_154_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_154_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_154_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5079040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d8000);
}
// static void setup_memread_mmap_p9a4_154_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_154_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_154_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_155_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_155_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_155_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_155_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 172032, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_155_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_155_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_155_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_156_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_156_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_156_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_156_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5079040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_156_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_156_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_156_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_157_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_157_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_157_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_157_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5079040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_157_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_157_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_157_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_158_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_158_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_158_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_6_common
static void setup_memread_mmap_p9a4_158_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p9a4_158_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_158_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_158_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_159_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_159_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_159_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_159_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p9a4_159_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_159_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_159_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_160_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_160_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_160_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_160_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_160_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_160_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_160_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_161_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_161_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_161_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_161_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_161_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_161_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_161_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_162_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_162_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_162_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_6_common
static void setup_memread_mmap_p9a4_162_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_p9a4_162_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_162_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_162_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_163_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_163_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_163_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
// static void setup_memread_mmap_p9a4_163_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x3000);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p9a4_131_proc0
// static void setup_memread_mmap_p9a4_163_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_163_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_163_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_164_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_164_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_164_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
// static void setup_memread_mmap_p9a4_164_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x3000);
//   init_map_file(0x12345601000, 1, "__i0", 0x3000);
// }
// ^ See setup_memread_mmap_p9a4_130_proc0
// static void setup_memread_mmap_p9a4_164_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_164_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_164_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_165_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_165_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_29_1
// static void setup_memread_mmap_p9a4_165_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_165_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p9a4_165_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_165_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_165_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_166_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_166_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_132_1
// static void setup_memread_mmap_p9a4_166_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_166_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 172032, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_166_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_166_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_166_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_167_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_167_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_132_1
// static void setup_memread_mmap_p9a4_167_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_167_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_167_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_167_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_167_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_168_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_168_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_132_1
// static void setup_memread_mmap_p9a4_168_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_168_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 172032, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_168_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_168_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_168_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_169_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_169_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p9a4_132_1
// static void setup_memread_mmap_p9a4_169_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_169_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_p9a4_169_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_169_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_169_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_170_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_170_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_p9a4_170_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9a4_170_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_mmap_p9a4_170_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_170_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_170_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_171_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_171_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p9a4_171_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9a4_171_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x4000);
}
// static void setup_memread_mmap_p9a4_171_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_171_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_171_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_172_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_172_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_172_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_25_common
static void setup_memread_mmap_p9a4_172_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i1", 0x2000);
}
// static void setup_memread_mmap_p9a4_172_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_172_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p9a4_172_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_173_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_173_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_173_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_123_common
static void setup_memread_mmap_p9a4_173_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x28000);
}
// static void setup_memread_mmap_p9a4_173_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_173_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_173_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_174_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_174_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_19_1
// static void setup_memread_mmap_p9a4_174_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_174_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memread_mmap_p9a4_174_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_174_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_174_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_175_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_175_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_87_1
// static void setup_memread_mmap_p9a4_175_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p9a4_175_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memread_mmap_p9a4_175_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_175_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_175_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_176_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_176_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_87_1
// static void setup_memread_mmap_p9a4_176_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
// static void setup_memread_mmap_p9a4_176_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x3000);
//   init_map_file(0x12345601000, 1, "__i0", 0x3000);
// }
// ^ See setup_memread_mmap_p9a4_148_proc0
// static void setup_memread_mmap_p9a4_176_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_176_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_176_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_177_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_177_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e29000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_37_1
// static void setup_memread_mmap_p9a4_177_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p9a4_177_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p9a4_177_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_177_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_177_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_178_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p9a4_178_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pba8_87_1
// static void setup_memread_mmap_p9a4_178_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
// static void setup_memread_mmap_p9a4_178_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x3000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memread_mmap_p9a4_151_proc0
// static void setup_memread_mmap_p9a4_178_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_178_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_178_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p9a4_179_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p9a4_179_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memread_mmap_p9a4_179_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_21_common
// static void setup_memread_mmap_p9a4_179_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x3000);
// }
// ^ See setup_memread_mmap_p9a4_72_proc0
// static void setup_memread_mmap_p9a4_179_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p9a4_179_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p9a4_179_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p98_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p98_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_p98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p98_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p98_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p98_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_p98_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p98_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p98_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p98_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p96_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p96_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_p96_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p96_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p96_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p96_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p96_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p96_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p96_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_p96_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p96_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p96_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p96_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p96_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p96_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p96_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_p96_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p96_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p96_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p96_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p96_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p96_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p96_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_p96_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p96_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p96_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p96_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p96_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p93_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p93_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p93_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
// static void setup_memread_mmap_p93_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p9b_0_proc0
// static void setup_memread_mmap_p93_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p93_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p93_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p93_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p93_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p93_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
// static void setup_memread_mmap_p93_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p9b_1_proc0
// static void setup_memread_mmap_p93_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p93_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p93_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p93_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p93_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p93_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
// static void setup_memread_mmap_p93_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p9b_2_proc0
// static void setup_memread_mmap_p93_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p93_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p93_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p93_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p93_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p93_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
// static void setup_memread_mmap_p93_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p9b_3_proc0
// static void setup_memread_mmap_p93_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p93_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p93_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p93_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p93_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p93_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
// static void setup_memread_mmap_p93_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p9b_4_proc0
// static void setup_memread_mmap_p93_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p93_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p93_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p93_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p93_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p93_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
// static void setup_memread_mmap_p93_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p9b_5_proc0
// static void setup_memread_mmap_p93_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p93_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p93_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p93_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p93_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p93_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
// static void setup_memread_mmap_p93_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p9b_6_proc0
// static void setup_memread_mmap_p93_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p93_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p93_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p93_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p93_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p93_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
// static void setup_memread_mmap_p93_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p9b_7_proc0
// static void setup_memread_mmap_p93_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p93_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p93_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p928_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x3000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_p928_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_123_common
static void setup_memread_mmap_p928_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_memread_mmap_p928_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p928_1_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x5000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_p928_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
// static void setup_memread_mmap_p928_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x6000);
// }
// ^ See setup_memread_mmap_p9a4_44_proc0
// static void setup_memread_mmap_p928_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p928_2_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e2b000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_p928_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p928_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31633408, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_memread_mmap_p928_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e2b000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p928_2_1
// static void setup_memread_mmap_p928_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_53_common
static void setup_memread_mmap_p928_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31633408, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_memread_mmap_p928_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p928_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p928_0_1
// static void setup_memread_mmap_p928_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_26_common
static void setup_memread_mmap_p928_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_memread_mmap_p928_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p928_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p928_5_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x5000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_p928_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_0_common
static void setup_memread_mmap_p928_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
}
// static void setup_memread_mmap_p928_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p928_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_1_1
// static void setup_memread_mmap_p928_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p928_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_p928_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p928_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p928_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memread_mmap_p928_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p928_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p928_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p928_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_1_1
// static void setup_memread_mmap_p928_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
static void setup_memread_mmap_p928_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_p928_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p928_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p928_1_1
// static void setup_memread_mmap_p928_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
// static void setup_memread_mmap_p928_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x6000);
// }
// ^ See setup_memread_mmap_p9a4_45_proc0
// static void setup_memread_mmap_p928_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p928_5_1
// static void setup_memread_mmap_p928_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf44_0_common
static void setup_memread_mmap_p928_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x6000);
}
// static void setup_memread_mmap_p928_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p928_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p928_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p928_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pc5_2_1
// static void setup_memread_mmap_p928_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
static void setup_memread_mmap_p928_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_memread_mmap_p928_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p928_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pc5_2_1
// static void setup_memread_mmap_p928_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p928_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p928_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p928_5_1
// static void setup_memread_mmap_p928_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p928_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_memread_mmap_p928_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e29000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pa28_16_1
// static void setup_memread_mmap_p928_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p928_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p928_8_proc0
// static void setup_memread_mmap_p928_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pc5_2_1
// static void setup_memread_mmap_p928_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p928_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p9a4_80_proc0
// static void setup_memread_mmap_p928_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_18_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_18_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p928_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p928_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p928_14_proc0
// static void setup_memread_mmap_p928_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_18_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_19_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_19_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p928_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p928_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memread_mmap_p928_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_19_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_20_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_20_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2298000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_19_1
// static void setup_memread_mmap_p928_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
static void setup_memread_mmap_p928_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p928_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_20_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p928_20_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_21_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_21_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pa28_8_1
// static void setup_memread_mmap_p928_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p928_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_p928_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_21_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_22_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_22_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p928_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p928_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p928_14_proc0
// static void setup_memread_mmap_p928_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_22_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_23_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p928_23_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2298000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_p928_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
static void setup_memread_mmap_p928_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_p928_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_23_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p928_23_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_24_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_24_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p928_1_1
// static void setup_memread_mmap_p928_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_55_common
static void setup_memread_mmap_p928_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_memread_mmap_p928_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_24_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_25_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_25_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2298000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pb28_19_1
// static void setup_memread_mmap_p928_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
static void setup_memread_mmap_p928_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p928_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_25_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_26_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p928_26_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x229b000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_p928_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_53_common
static void setup_memread_mmap_p928_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36286464, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
}
// static void setup_memread_mmap_p928_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_26_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p928_26_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p928_27_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p928_27_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p928_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p928_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p9a4_80_proc0
// static void setup_memread_mmap_p928_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p928_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p928_27_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p90_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p90_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_p90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p90_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p90_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p90_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_p90_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p90_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p90_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p90_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p90_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p8c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p8c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_p8c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p8c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p8c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p8c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_82_common
// static void setup_memread_mmap_p8c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
static void setup_memread_mmap_p8c_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p8c_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p8c_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p8c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_1_proc0
// static void setup_memread_mmap_p8c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_p8c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p8c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_1_proc0
// static void setup_memread_mmap_p8c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_82_common
// static void setup_memread_mmap_p8c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
static void setup_memread_mmap_p8c_7_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_p8c_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p8c_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8c_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p8c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_p8c_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p8c_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
static void setup_memread_mmap_p8c_9_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
}
// static void setup_memread_mmap_p8c_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8c_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p8c_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8c_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p8c_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_82_common
// static void setup_memread_mmap_p8c_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8c_4_proc1
// static void setup_memread_mmap_p8c_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p8c_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p8c_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_p8c_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p8c_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8c_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_p8c_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8c_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_82_common
// static void setup_memread_mmap_p8c_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8c_7_proc1
// static void setup_memread_mmap_p8c_16_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memread_mmap_pbc_5_final
// static void setup_memread_mmap_p8c_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8c_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8c_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p8c_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p8c_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_p8c_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8c_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8c_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8b_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8b_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p8b_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
static void setup_memread_mmap_p8b_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p8b_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p8b_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p8b_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8b_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8b_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p8b_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
static void setup_memread_mmap_p8b_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p8b_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p8b_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p8b_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8b_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8b_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p8b_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
static void setup_memread_mmap_p8b_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_p8b_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p8b_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p8b_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8b_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8b_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p8b_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
// static void setup_memread_mmap_p8b_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p8b_0_proc0
// static void setup_memread_mmap_p8b_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p8b_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p8b_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8b_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8b_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p8b_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
// static void setup_memread_mmap_p8b_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8b_1_proc0
// static void setup_memread_mmap_p8b_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p8b_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p8b_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8b_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8b_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p8b_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
static void setup_memread_mmap_p8b_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p8b_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p8b_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p8b_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8b_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8b_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p8b_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
// static void setup_memread_mmap_p8b_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8b_2_proc0
// static void setup_memread_mmap_p8b_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p8b_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p8b_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8b_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8b_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p8b_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
// static void setup_memread_mmap_p8b_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p8b_5_proc0
// static void setup_memread_mmap_p8b_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p8b_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p8b_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8a_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8a_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_p8a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p8a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_p8a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8a_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8a_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8a_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_p8a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
// static void setup_memread_mmap_p8a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8c_4_proc1
// static void setup_memread_mmap_p8a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_p8a_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p8a_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8a_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8a_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_p8a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_p8a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8a_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8a_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8a_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_p8a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
// static void setup_memread_mmap_p8a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8c_7_proc1
// static void setup_memread_mmap_p8a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_p8a_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p8a_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8a_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8a_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_p8a_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8a_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p8a_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p8a_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8a_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p8a_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p8a_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_p8a_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p8a_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p8a_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p8a_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p8a_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p88_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p88_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_p88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p88_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p88_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p88_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p88_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_p88_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p88_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p88_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p88_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p88_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p86_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p86_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_p86_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p86_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p86_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p86_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p86_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p86_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p86_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_p86_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p86_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p86_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p86_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p86_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p86_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p86_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_p86_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p86_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p86_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p86_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p86_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p86_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p86_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_p86_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p86_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p86_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p86_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p86_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p83_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p83_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p83_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
// static void setup_memread_mmap_p83_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p8b_0_proc0
// static void setup_memread_mmap_p83_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p83_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p83_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p83_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p83_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p83_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
// static void setup_memread_mmap_p83_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8b_1_proc0
// static void setup_memread_mmap_p83_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p83_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p83_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p83_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p83_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p83_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
// static void setup_memread_mmap_p83_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8b_2_proc0
// static void setup_memread_mmap_p83_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p83_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p83_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p83_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p83_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p83_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
// static void setup_memread_mmap_p83_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p8b_0_proc0
// static void setup_memread_mmap_p83_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p83_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p83_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p83_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p83_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p83_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
// static void setup_memread_mmap_p83_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8b_1_proc0
// static void setup_memread_mmap_p83_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p83_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p83_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p83_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p83_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p83_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
// static void setup_memread_mmap_p83_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p8b_5_proc0
// static void setup_memread_mmap_p83_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p83_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p83_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p83_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p83_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p83_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_1_common
// static void setup_memread_mmap_p83_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8b_2_proc0
// static void setup_memread_mmap_p83_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p83_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pbb_1_final
// static void setup_memread_mmap_p83_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p83_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p83_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p83_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_p9b_0_common
// static void setup_memread_mmap_p83_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_p8b_5_proc0
// static void setup_memread_mmap_p83_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p83_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p83_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p828_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p828_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_p828_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
static void setup_memread_mmap_p828_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_memread_mmap_p828_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_p828_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p828_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p828_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
// static void setup_memread_mmap_p828_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_p828_1_proc0
// static void setup_memread_mmap_p828_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_p828_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p828_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_1_1
// static void setup_memread_mmap_p828_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
// static void setup_memread_mmap_p828_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8c_7_proc1
// static void setup_memread_mmap_p828_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_p828_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p828_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pc5_2_1
// static void setup_memread_mmap_p828_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_14_common
// static void setup_memread_mmap_p828_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memread_mmap_p8c_7_proc1
// static void setup_memread_mmap_p828_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_8_proc1
// static void setup_memread_mmap_p828_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p828_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p828_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_1_proc0
// static void setup_memread_mmap_p828_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pa28_8_1
// static void setup_memread_mmap_p828_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
// static void setup_memread_mmap_p828_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x3000);
// }
// ^ See setup_memread_mmap_p8c_9_proc0
// static void setup_memread_mmap_p828_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pa28_9_proc1
// static void setup_memread_mmap_p828_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_123_common
static void setup_memread_mmap_p828_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_memread_mmap_p828_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_p828_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
// static void setup_memread_mmap_p828_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_p828_1_proc0
// static void setup_memread_mmap_p828_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p828_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
// static void setup_memread_mmap_p828_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_8_proc0
// static void setup_memread_mmap_p828_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p828_9_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p828_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p828_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_1_proc0
// static void setup_memread_mmap_p828_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_10_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p828_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
// static void setup_memread_mmap_p828_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_p828_1_proc0
// static void setup_memread_mmap_p828_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p828_11_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p828_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p828_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_p828_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_12_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p828_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_28_common
// static void setup_memread_mmap_p828_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_8_proc0
// static void setup_memread_mmap_p828_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p828_13_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p828_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_p828_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_14_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
static int test_memread_mmap_p828_15_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
  
  return xerrno(r);
}
// static void setup_memread_mmap_p828_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
// static void setup_memread_mmap_p828_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x3000);
// }
// ^ See setup_memread_mmap_p8c_9_proc0
static void setup_memread_mmap_p828_15_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_mmap_p828_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_15_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p928_0_1
// static void setup_memread_mmap_p828_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
static void setup_memread_mmap_p828_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memread_mmap_p828_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_p828_15_proc1
// static void setup_memread_mmap_p828_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_16_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_p828_15_1
// static void setup_memread_mmap_p828_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_7_common
// static void setup_memread_mmap_p828_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x3000);
// }
// ^ See setup_memread_mmap_p828_16_proc0
// static void setup_memread_mmap_p828_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_p828_15_proc1
// static void setup_memread_mmap_p828_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_17_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_18_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_18_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p828_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p828_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_18_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_19_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_19_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_123_common
static void setup_memread_mmap_p828_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_memread_mmap_p828_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_p828_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_19_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_20_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_20_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pc5_2_1
// static void setup_memread_mmap_p828_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_123_common
// static void setup_memread_mmap_p828_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x2000);
// }
// ^ See setup_memread_mmap_p828_7_proc0
// static void setup_memread_mmap_p828_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_20_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_21_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_21_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pc5_2_1
// static void setup_memread_mmap_p828_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9a4_123_common
// static void setup_memread_mmap_p828_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
// }
// ^ See setup_memread_mmap_p828_19_proc0
// static void setup_memread_mmap_p828_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_21_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_22_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_22_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p828_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_p828_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_p828_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_22_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_23_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_23_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p828_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p828_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p828_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_23_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_24_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_24_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p828_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p828_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_1_proc0
// static void setup_memread_mmap_p828_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_p828_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_24_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_25_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_25_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p828_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p828_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p828_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_25_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_26_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_26_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p828_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p828_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memread_mmap_pa28_10_proc0
// static void setup_memread_mmap_p828_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_p828_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_26_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p828_27_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p828_27_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p828_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p828_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p828_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p828_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p828_27_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p80_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p80_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p80_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p80_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p80_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_mmap_pfc_0_0
// static int test_memread_mmap_p80_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_p80_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_p9c_0_common
// static void setup_memread_mmap_p80_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p80_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p80_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p80_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
static int test_memread_mmap_p70_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int r, signal;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    r = *p;
  pf_active = 0;
  expect_result("signal", signal, 11);
  expect_result("r", r, -1);
  return r;
}
// static int test_memread_mmap_p70_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p70_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p70_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p70_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p70_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p70_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
static void setup_memread_mmap_p70_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p70_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p70_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p70_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p70_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p70_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_p70_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p70_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p70_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p70_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p70_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p70_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p70_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
static void setup_memread_mmap_p70_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p70_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p70_3_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p70_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p70_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p70_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_0_1
// static void setup_memread_mmap_p70_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_p70_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p70_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p70_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p70_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p6c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p6c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p6c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_p6c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p6c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p6c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p6c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p6c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p6c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p6c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_p6c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p6c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p6c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p6c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p68_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p68_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_p68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p68_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p68_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p68_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_p68_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p68_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p68_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p68_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p68_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p68_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p68_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memread_mmap_p68_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p68_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p68_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p68_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p68_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p68_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_p68_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memread_mmap_p68_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p68_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p68_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p68_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p68_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p68_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_p68_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memread_mmap_p68_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p68_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p68_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p68_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p68_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p68_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_6_common
static void setup_memread_mmap_p68_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memread_mmap_p68_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p68_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pf5_6_final
// static void setup_memread_mmap_p68_5_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p68_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p68_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p68_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_p68_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memread_mmap_p68_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p68_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p68_6_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p68_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p68_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p68_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
static void setup_memread_mmap_p68_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memread_mmap_p68_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p68_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p68_7_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p68_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p68_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf5_0_1
// static void setup_memread_mmap_p68_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
static void setup_memread_mmap_p68_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memread_mmap_p68_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p68_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p68_8_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p60_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p60_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_p60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p60_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p60_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p60_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p58_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p58_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_p58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p58_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p58_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p58_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p58_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_p58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p58_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p58_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p4c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p4c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p4c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_p4c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p4c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p4c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p4c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p4c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p4c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p4c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_p4c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p4c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p4c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p4c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p4a_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p4a_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p4a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_p4a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p4a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p4a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p4a_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p4a_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p4a_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_1_1
// static void setup_memread_mmap_p4a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p4a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p4a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p4a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p4a_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p4a_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p4a_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p4a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_p4a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p4a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p4a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p4a_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p4a_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p4a_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pc5_2_1
// static void setup_memread_mmap_p4a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p4a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p4a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p4a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p4a_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p40_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p40_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_p40_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p40_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p40_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p30_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p30_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p30_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p30_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p30_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p30_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_p30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_3_proc1
// static void setup_memread_mmap_p30_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p30_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p30_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p30_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p30_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_p30_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p30_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_mmap_pd8_5_proc1
// static void setup_memread_mmap_p30_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p30_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p30_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p30_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p30_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p30_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p30_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_mmap_pfc_1_proc0
// static void setup_memread_mmap_p30_3_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p30_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p30_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p30_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pfc_8_1
// static void setup_memread_mmap_p30_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p30_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p30_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_mmap_pfc_3_proc0
// static void setup_memread_mmap_p30_4_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p30_4_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p2c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p2c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p2c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_p2c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p2c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p2c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p2c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p2c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p2c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf6_0_1
// static void setup_memread_mmap_p2c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_p2c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p2c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p2c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p2c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p28_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p28_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pd4_0_1
// static void setup_memread_mmap_p28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_p28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p28_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p20_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p20_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pf0_0_1
// static void setup_memread_mmap_p20_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p20_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p20_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p20_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p20_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p18_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p18_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_0_1
// static void setup_memread_mmap_p18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p18_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p18_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p18_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p18_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pec_1_1
// static void setup_memread_mmap_p18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p18_1_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p18_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p0c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p0c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p0c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_p0c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p0c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_0_proc1
// static void setup_memread_mmap_p0c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p0c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p0c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p0c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe6_0_1
// static void setup_memread_mmap_p0c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_mmap_pf6_0_common
// static void setup_memread_mmap_p0c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pf6_0_proc1
// static void setup_memread_mmap_p0c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_mmap_pd6_2_proc1
// static void setup_memread_mmap_p0c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_final
// static void setup_memread_mmap_p0c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_mmap_pf6_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p0a_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p0a_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p0a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_p0a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p0a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p0a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p0a_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p0a_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p0a_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_0_1
// static void setup_memread_mmap_p0a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p0a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p0a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_p0a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p0a_1_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p0a_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p0a_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p0a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_mmap_pfc_2_common
// static void setup_memread_mmap_p0a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p0a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pd4_0_proc1
// static void setup_memread_mmap_p0a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p0a_2_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p0a_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p0a_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe5_2_1
// static void setup_memread_mmap_p0a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_mmap_pf5_5_common
// static void setup_memread_mmap_p0a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p0a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_mmap_pc5_1_proc1
// static void setup_memread_mmap_p0a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_mmap_pfc_2_final
// static void setup_memread_mmap_p0a_3_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

/*
 * calls: memread mmap
 */
// static int test_memread_mmap_p00_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_mmap_p70_0_0
// static int test_memread_mmap_p00_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memread_mmap_pe0_0_1
// static void setup_memread_mmap_p00_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_common
// static void setup_memread_mmap_p00_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p00_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_mmap_pfc_0_proc1
// static void setup_memread_mmap_p00_0_final(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal
// static void setup_memread_mmap_p00_0_procfinal(void) {
//   
// }
// ^ See setup_memread_mmap_pfc_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-memread_mmap_pfc_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_2",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_3",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_4",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_5",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_5_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_6",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_6_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_7",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_8",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_9",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_9_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_10",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_10_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pfc_11",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf6_0",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_0_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf6_1",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_1_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf6_2",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_2_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf6_3",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_3_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_0_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_2",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_4",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_5",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pf5_5_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_6",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pf5_6_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_7",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_8",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pf5_8_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_9",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_9_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_10",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pf5_10_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_11",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_11_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_12",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_12_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_13",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pf5_13_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_14",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pf5_14_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_15",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_15_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_16",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pf5_16_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf5_17",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pf5_17_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf44_0",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_pf44_0_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf44_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf44_1",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_pf44_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf44_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf44_2",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_pf44_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf44_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf44_3",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_pf44_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf44_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf0_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pf0_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pec_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pec_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pec_2",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pec_3",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe6_0",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_0_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe6_1",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_1_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe6_2",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_2_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe6_3",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_3_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe5_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe5_1",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pf5_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe5_2",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pf44_0_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe5_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pf5_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe5_4",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pf5_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe5_5",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pf44_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe5_6",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pf5_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe5_7",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pf5_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe0_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pe0_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd8_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_1_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd8_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd8_2",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd8_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pd8_3_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd8_4",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_3_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd8_5",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pd8_5_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd8_6",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_1_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd8_7",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pd8_3_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd8_8",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_3_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd8_9",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pd8_5_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd6_0",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_0_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd6_1",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_1_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd6_2",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_0_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd6_3",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_1_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd4_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd4_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd0_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pd0_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pcc_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pcc_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pcc_2",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pcc_3",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc6_0",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_0_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc6_1",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_1_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc6_2",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_0_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc6_3",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_1_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc5_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc5_1",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc5_2",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pc5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc5_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc5_4",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc5_5",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc5_6",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc5_7",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc0_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pc0_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_0_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_2",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_4",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_5",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pbc_5_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_6",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pbc_6_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_7",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_8",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_8_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_9",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_9_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_10",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_10_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_11",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pbc_11_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_12",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pbc_12_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_13",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_13_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_14",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_14_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_15",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_15_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_16",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_16_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbc_17",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_17_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbb_0",
    &setup_memread_mmap_pbb_0_common,
    { { &setup_memread_mmap_pbb_0_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbb_1",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pbb_1_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbb_2",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pbb_2_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbb_3",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pbb_3_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbb_4",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pbb_4_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbb_5",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pbb_5_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbb_6",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pbb_6_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pbb_7",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pbb_7_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_0",
    &setup_memread_mmap_pba8_0_common,
    { { &setup_memread_mmap_pba8_0_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_2",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_3",
    &setup_memread_mmap_pba8_3_common,
    { { &setup_memread_mmap_pba8_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_4",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_5",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_5_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_6",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_6_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_7",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_8",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_8_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_9",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_9_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_10",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_10_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_11",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_11_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_12",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_12_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_13",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_13_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_14",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_14_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_15",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_15_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_16",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_16_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_17",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_17_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_18",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_18_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_19",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_19_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_20",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_20_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_21",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_21_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_22",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_22_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_23",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_23_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_24",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_24_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_25",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_25_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_26",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_26_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_27",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_27_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_28",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_28_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_29",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_19_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_30",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_30_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_31",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_31_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_32",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_32_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_33",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_33_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_34",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_34_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_35",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_35_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_36",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_36_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_37",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_37_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_38",
    &setup_memread_mmap_pba8_3_common,
    { { &setup_memread_mmap_pba8_38_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_39",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_39_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_40",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_40_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_41",
    &setup_memread_mmap_pba8_3_common,
    { { &setup_memread_mmap_pba8_41_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_42",
    &setup_memread_mmap_pba8_3_common,
    { { &setup_memread_mmap_pba8_42_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_43",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_43_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_44",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_44_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_45",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_45_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_46",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_46_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_47",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_47_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_48",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_48_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_49",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_49_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_50",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_50_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_51",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_51_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_52",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_52_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_53",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_53_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_54",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_54_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_55",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_55_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_56",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_56_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_57",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_57_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_58",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_58_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_59",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_59_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_59_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_60",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_60_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_61",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_61_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_62",
    &setup_memread_mmap_pba8_3_common,
    { { &setup_memread_mmap_pba8_62_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_63",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_64",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_64_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_65",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_65_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_66",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_66_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_67",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_67_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_68",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_68_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_69",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_69_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_70",
    &setup_memread_mmap_pba8_3_common,
    { { &setup_memread_mmap_pba8_70_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_71",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_71_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_71_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_72",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_72_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_73",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_73_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_74",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_74_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_75",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_75_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_76",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_76_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_77",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_77_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_78",
    &setup_memread_mmap_pba8_3_common,
    { { &setup_memread_mmap_pba8_78_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_79",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_79_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_80",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_80_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_81",
    &setup_memread_mmap_pba8_3_common,
    { { &setup_memread_mmap_pba8_81_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_82",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_82_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_83",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_83_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_84",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_84_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_85",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_85_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_86",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_86_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_87",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_87_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_88",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_88_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_89",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_89_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_90",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_90_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_90_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_91",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_91_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_74_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_92",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_90_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_93",
    &setup_memread_mmap_pba8_93_common,
    { { &setup_memread_mmap_pba8_93_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_93_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_94",
    &setup_memread_mmap_pba8_93_common,
    { { &setup_memread_mmap_pba8_94_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_93_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_95",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_95_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_96",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_96_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_97",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_97_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_98",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_98_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_99",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_99_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_100",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_100_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_101",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_101_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_102",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_102_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_103",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_103_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_104",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_104_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_105",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_105_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_71_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_106",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_106_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_71_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_107",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_107_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_71_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_108",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_108_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_71_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_109",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_109_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_110",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_60_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_111",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_111_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_112",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_75_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_59_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_113",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_113_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_114",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_114_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_115",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_115_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_116",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_116_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_117",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_117_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_118",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_118_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_90_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_119",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_119_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_119_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_120",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_120_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_119_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_121",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_121_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_122",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_122_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_123",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_123_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_119_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_124",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_124_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_125",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_125_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_126",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_126_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_127",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_127_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_128",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_128_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_59_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_129",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_129_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_119_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_130",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_130_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_131",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_131_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_132",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_132_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_119_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_133",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_133_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_134",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_134_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_135",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_135_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_135_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_136",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_136_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_135_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_137",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_137_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_137_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_138",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_138_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_138_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_139",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_139_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_140",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_140_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_119_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_141",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_15_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_141_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_142",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_142_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_143",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_143_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_144",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_144_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_144_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_145",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_145_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_146",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_146_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_147",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_147_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_148",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_148_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_149",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_149_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_138_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_150",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_150_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_150_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_151",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_151_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_152",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_152_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_153",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_153_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_154",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_154_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_49_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_155",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_155_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_59_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_156",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_156_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_157",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_157_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_158",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_158_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_159",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_159_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_159_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_160",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_160_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_161",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_161_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_162",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pba8_162_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_163",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_163_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_150_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_164",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_164_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_59_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_165",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_165_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_166",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_166_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_14_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_167",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_167_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_71_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_168",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_168_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_169",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_169_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_170",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_158_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_171",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_171_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_138_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_172",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_168_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_173",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_173_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_138_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_174",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_174_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_175",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_175_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_141_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_176",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_176_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_176_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_177",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_177_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_177_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_178",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_177_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_141_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pba8_179",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_179_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_176_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb8_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb8_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb6_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb6_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb6_2",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb6_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb3_0",
    &setup_memread_mmap_pbb_0_common,
    { { &setup_memread_mmap_pbb_0_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb3_1",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pbb_1_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb3_2",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pbb_2_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb3_3",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pbb_3_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb3_4",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pbb_4_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb3_5",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pbb_5_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb3_6",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pbb_6_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb3_7",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pbb_7_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_20_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_1",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pb28_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_2",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pb28_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_109_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_4",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_5",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_5_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_6",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_175_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_7",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_8",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pb28_8_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_9",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_49_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_9_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_10",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_10_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_10_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_11",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_11_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_11_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_12",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_12_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_13",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pb28_13_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_14",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_11_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_15",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_59_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_11_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_16",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_11_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_17",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_17_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_18",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pba8_59_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_17_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_19",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_19_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_20",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pb28_20_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_21",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_17_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_21_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_22",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pb28_22_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_21_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_23",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_50_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_9_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_24",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_49_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_10_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_25",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pb28_25_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_25_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_26",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_60_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb28_27",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pba8_50_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_10_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb0_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pb0_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pfc_1_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_2",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_2_proc0 }, { &setup_memread_mmap_pac_1_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_3_proc0 }, { &setup_memread_mmap_pac_3_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_4",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_5",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pbc_1_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_6",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pac_6_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_7",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pac_7_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_8",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pfc_3_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_9",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pac_9_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_10",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pac_10_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_11",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_1_proc0 }, { &setup_memread_mmap_pac_2_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_12",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_12_proc0 }, { &setup_memread_mmap_pfc_1_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_13",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pac_6_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_14",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pfc_3_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_15",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pbc_3_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_16",
    &setup_memread_mmap_pbc_5_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pac_16_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pac_17",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_17_proc0 }, { &setup_memread_mmap_pac_17_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pab_0",
    &setup_memread_mmap_pbb_0_common,
    { { &setup_memread_mmap_pab_0_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pab_1",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pab_1_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pab_2",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pab_2_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pab_3",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pab_1_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pab_4",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pab_4_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pab_5",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pab_5_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pab_6",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pab_4_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pab_7",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pab_5_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_paa_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_paa_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_paa_1",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_paa_1_proc0 }, { &setup_memread_mmap_paa_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_paa_2",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_paa_2_proc0 }, { &setup_memread_mmap_paa_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_paa_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_1_proc0 }, { &setup_memread_mmap_paa_3_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_paa_4",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_2_proc0 }, { &setup_memread_mmap_paa_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_paa_5",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_2_proc0 }, { &setup_memread_mmap_paa_3_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa8_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa8_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa6_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa6_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa6_2",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa6_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa3_0",
    &setup_memread_mmap_pbb_0_common,
    { { &setup_memread_mmap_pab_0_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa3_1",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pab_1_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa3_2",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pab_2_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa3_3",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pab_1_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa3_4",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pab_4_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa3_5",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pab_5_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa3_6",
    &setup_memread_mmap_pbb_2_common,
    { { &setup_memread_mmap_pab_4_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa3_7",
    &setup_memread_mmap_pbb_1_common,
    { { &setup_memread_mmap_pab_5_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_1_proc0 }, { &setup_memread_mmap_paa_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_2",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pa28_2_proc0 }, { &setup_memread_mmap_pa28_2_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_17_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_3",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_3_proc0 }, { &setup_memread_mmap_pa28_2_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_17_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_4",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pa28_4_proc0 }, { &setup_memread_mmap_paa_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_4_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_5",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_5_proc0 }, { &setup_memread_mmap_pa28_5_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_9_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_6",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_6_proc0 }, { &setup_memread_mmap_pa28_6_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_17_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_7",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_8",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pa28_8_proc0 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_9",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pa28_8_proc0 }, { &setup_memread_mmap_pa28_9_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_10",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_11",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_12",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_13",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_14",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_14_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_15",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pa28_9_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_14_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_16",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pa28_16_proc0 }, { &setup_memread_mmap_paa_3_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_16_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_17",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pa28_17_proc0 }, { &setup_memread_mmap_paa_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_10_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_18",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_18_proc0 }, { &setup_memread_mmap_paa_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_18_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_19",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_20",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pac_3_proc1 }, { &setup_memread_mmap_pa28_20_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_21",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_22",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pa28_8_proc0 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_23",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pc5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_24",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_25",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_pa28_25_proc0 }, { &setup_memread_mmap_paa_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_10_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_26",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_26_proc0 }, { &setup_memread_mmap_paa_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_10_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa28_27",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pa28_6_proc0 }, { &setup_memread_mmap_paa_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_11_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa0_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_pa0_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pbc_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pbc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9f0_0",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9f0_0_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9f0_1",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9f0_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_0",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9c_0_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_1",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p9c_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_2",
    &setup_memread_mmap_p9c_2_common,
    { { &setup_memread_mmap_p9c_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_3",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_4",
    &setup_memread_mmap_p9c_2_common,
    { { &setup_memread_mmap_p9c_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_5",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_6",
    &setup_memread_mmap_p9c_6_common,
    { { &setup_memread_mmap_p9c_6_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_7",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9c_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_8",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9c_8_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_9",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9c_9_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_10",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p9c_10_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_11",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9c_11_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_12",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p9c_12_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_13",
    &setup_memread_mmap_p9c_2_common,
    { { &setup_memread_mmap_p9c_13_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_14",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9c_14_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_15",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9c_15_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_16",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p9c_16_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9c_17",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9c_17_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9b_0",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p9b_0_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9b_1",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p9b_1_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9b_2",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p9b_2_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9b_3",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p9b_3_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9b_4",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p9b_4_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9b_5",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p9b_5_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9b_6",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p9b_6_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9b_7",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p9b_7_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_0",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_0_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf44_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_1",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9a4_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_2",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_3",
    &setup_memread_mmap_p9a4_3_common,
    { { &setup_memread_mmap_p9a4_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_4",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_5",
    &setup_memread_mmap_p9a4_5_common,
    { { &setup_memread_mmap_p9a4_5_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf44_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_6",
    &setup_memread_mmap_p9a4_5_common,
    { { &setup_memread_mmap_p9a4_6_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf44_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_7",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p9a4_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_8",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_8_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_9",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_9_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_10",
    &setup_memread_mmap_p9a4_3_common,
    { { &setup_memread_mmap_p9a4_10_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_11",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_11_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_12",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_12_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_13",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_13_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_14",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p9a4_14_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_15",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p9a4_15_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_16",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p9a4_16_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_17",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p9a4_17_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_18",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p9a4_18_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_19",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p9a4_19_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_20",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p9a4_20_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_21",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_21_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_21_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_22",
    &setup_memread_mmap_p9a4_22_common,
    { { &setup_memread_mmap_p9a4_22_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_21_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_23",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_23_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_23_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_24",
    &setup_memread_mmap_p9a4_24_common,
    { { &setup_memread_mmap_p9a4_24_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_25",
    &setup_memread_mmap_p9a4_25_common,
    { { &setup_memread_mmap_p9a4_25_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_26",
    &setup_memread_mmap_p9a4_26_common,
    { { &setup_memread_mmap_p9a4_26_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_27",
    &setup_memread_mmap_p9a4_26_common,
    { { &setup_memread_mmap_p9a4_27_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_28",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_pba8_99_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_29",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p9a4_29_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_30",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p9a4_30_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_31",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p9a4_31_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_32",
    &setup_memread_mmap_p9a4_32_common,
    { { &setup_memread_mmap_p9a4_32_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_33",
    &setup_memread_mmap_p9a4_32_common,
    { { &setup_memread_mmap_p9a4_33_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_34",
    &setup_memread_mmap_p9a4_26_common,
    { { &setup_memread_mmap_p9a4_34_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_35",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_35_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_36",
    &setup_memread_mmap_p9a4_32_common,
    { { &setup_memread_mmap_p9a4_36_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_37",
    &setup_memread_mmap_p9a4_26_common,
    { { &setup_memread_mmap_p9a4_37_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_38",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_pba8_98_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_39",
    &setup_memread_mmap_p9a4_26_common,
    { { &setup_memread_mmap_p9a4_39_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_40",
    &setup_memread_mmap_p9a4_26_common,
    { { &setup_memread_mmap_p9a4_40_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_41",
    &setup_memread_mmap_p9a4_26_common,
    { { &setup_memread_mmap_p9a4_41_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_42",
    &setup_memread_mmap_p9c_2_common,
    { { &setup_memread_mmap_pba8_104_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_43",
    &setup_memread_mmap_p9a4_25_common,
    { { &setup_memread_mmap_p9a4_43_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_44",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_44_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_45",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_45_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_46",
    &setup_memread_mmap_p9a4_24_common,
    { { &setup_memread_mmap_p9a4_46_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_47",
    &setup_memread_mmap_p9a4_24_common,
    { { &setup_memread_mmap_p9a4_47_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_48",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_48_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_49",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_49_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_50",
    &setup_memread_mmap_p9a4_24_common,
    { { &setup_memread_mmap_p9a4_50_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_51",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_51_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_52",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_52_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_53",
    &setup_memread_mmap_p9a4_53_common,
    { { &setup_memread_mmap_p9a4_53_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_54",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p9a4_54_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_55",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_55_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_56",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_56_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_57",
    &setup_memread_mmap_p9a4_57_common,
    { { &setup_memread_mmap_p9a4_57_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_58",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p9a4_58_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_59",
    &setup_memread_mmap_p9a4_59_common,
    { { &setup_memread_mmap_p9a4_59_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_60",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p9a4_60_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_61",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p9a4_61_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_62",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_62_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_63",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_63_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_64",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_64_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_65",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p9a4_65_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_66",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_66_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_67",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_67_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_68",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_68_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_69",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_69_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_70",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_70_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_71",
    &setup_memread_mmap_p9c_6_common,
    { { &setup_memread_mmap_p9a4_71_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_72",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_72_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_73",
    &setup_memread_mmap_p9a4_73_common,
    { { &setup_memread_mmap_p9a4_73_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_74",
    &setup_memread_mmap_p9a4_74_common,
    { { &setup_memread_mmap_p9a4_74_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_75",
    &setup_memread_mmap_p9a4_73_common,
    { { &setup_memread_mmap_p9a4_75_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_76",
    &setup_memread_mmap_p9a4_73_common,
    { { &setup_memread_mmap_p9a4_76_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_77",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p9a4_77_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_78",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_78_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_79",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_78_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_80",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9a4_80_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_81",
    &setup_memread_mmap_p9c_6_common,
    { { &setup_memread_mmap_p9a4_81_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_82",
    &setup_memread_mmap_p9a4_82_common,
    { { &setup_memread_mmap_p9a4_82_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_83",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_83_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_84",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_84_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_85",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p9a4_85_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_86",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_86_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_87",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_87_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_88",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9a4_88_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_89",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_89_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_90",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p9a4_90_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_91",
    &setup_memread_mmap_p9a4_26_common,
    { { &setup_memread_mmap_p9a4_91_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_92",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_92_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_93",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_93_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_93_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_94",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_94_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_94_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_95",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_95_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_96",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9a4_96_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_97",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_97_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_97_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_98",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_98_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_99",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_99_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_100",
    &setup_memread_mmap_p9a4_22_common,
    { { &setup_memread_mmap_p9a4_100_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_101",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_101_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_101_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_102",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_102_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_103",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_103_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_104",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_104_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_97_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_105",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_105_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_106",
    &setup_memread_mmap_p9a4_73_common,
    { { &setup_memread_mmap_p9a4_106_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_101_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_107",
    &setup_memread_mmap_p9a4_22_common,
    { { &setup_memread_mmap_p9a4_107_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_97_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_108",
    &setup_memread_mmap_p9a4_22_common,
    { { &setup_memread_mmap_p9a4_108_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_109",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_109_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_97_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_110",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_110_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_21_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_111",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_111_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_101_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_112",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_112_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_113",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_113_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_114",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_114_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_115",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_115_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_116",
    &setup_memread_mmap_p9a4_73_common,
    { { &setup_memread_mmap_p9a4_116_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_97_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_117",
    &setup_memread_mmap_p9a4_22_common,
    { { &setup_memread_mmap_p9a4_117_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_118",
    &setup_memread_mmap_p9a4_22_common,
    { { &setup_memread_mmap_p9a4_118_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_119",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_119_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_120",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_120_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_97_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_121",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_121_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_121_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_122",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_122_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_94_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_123",
    &setup_memread_mmap_p9a4_123_common,
    { { &setup_memread_mmap_p9a4_123_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_123_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_124",
    &setup_memread_mmap_p9a4_123_common,
    { { &setup_memread_mmap_p9a4_124_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_90_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_125",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_125_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_126",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_126_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_127",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p9a4_127_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_35_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_128",
    &setup_memread_mmap_p9a4_57_common,
    { { &setup_memread_mmap_p9a4_128_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_69_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_129",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_129_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf44_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_130",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_130_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_131",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_131_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_132",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_132_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_132_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_133",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_133_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_132_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_134",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_134_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_132_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_135",
    &setup_memread_mmap_p9a4_135_common,
    { { &setup_memread_mmap_p9a4_135_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_136",
    &setup_memread_mmap_p9a4_53_common,
    { { &setup_memread_mmap_p9a4_136_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_137",
    &setup_memread_mmap_p9a4_53_common,
    { { &setup_memread_mmap_p9a4_137_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_138",
    &setup_memread_mmap_p9a4_53_common,
    { { &setup_memread_mmap_p9a4_138_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_139",
    &setup_memread_mmap_p9a4_135_common,
    { { &setup_memread_mmap_p9a4_139_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pba8_3_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_140",
    &setup_memread_mmap_p9a4_53_common,
    { { &setup_memread_mmap_p9a4_140_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_141",
    &setup_memread_mmap_p9a4_53_common,
    { { &setup_memread_mmap_p9a4_141_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_142",
    &setup_memread_mmap_p9a4_53_common,
    { { &setup_memread_mmap_p9a4_142_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_143",
    &setup_memread_mmap_p9c_6_common,
    { { &setup_memread_mmap_p9a4_143_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_144",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_144_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_145",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_145_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_146",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_146_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_147",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_147_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_148",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_148_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_149",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_149_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_150",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_150_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_151",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_151_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_152",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_152_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_132_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_153",
    &setup_memread_mmap_p9c_6_common,
    { { &setup_memread_mmap_p9a4_153_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_154",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_154_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_155",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_155_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_156",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_156_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_157",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_157_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_158",
    &setup_memread_mmap_p9c_6_common,
    { { &setup_memread_mmap_p9a4_158_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_159",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_159_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_160",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_160_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_161",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_161_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_162",
    &setup_memread_mmap_p9c_6_common,
    { { &setup_memread_mmap_p9a4_162_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_163",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_131_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_164",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_130_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_165",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_165_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_166",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_166_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_132_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_167",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_167_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_132_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_168",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_168_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_132_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_169",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_169_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_132_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_170",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9a4_170_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_171",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9a4_171_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_172",
    &setup_memread_mmap_p9a4_25_common,
    { { &setup_memread_mmap_p9a4_172_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_173",
    &setup_memread_mmap_p9a4_123_common,
    { { &setup_memread_mmap_p9a4_173_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_174",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_174_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_175",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_175_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_176",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_148_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_177",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9a4_177_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_37_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_178",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p9a4_151_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pba8_87_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p9a4_179",
    &setup_memread_mmap_p9a4_21_common,
    { { &setup_memread_mmap_p9a4_72_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p9a4_179_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p98_0",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p98_1",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p96_0",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p96_1",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p96_2",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p96_3",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p93_0",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p9b_0_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p93_1",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p9b_1_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p93_2",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p9b_2_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p93_3",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p9b_3_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p93_4",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p9b_4_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p93_5",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p9b_5_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p93_6",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p9b_6_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p93_7",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p9b_7_proc0 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_0",
    &setup_memread_mmap_p9a4_123_common,
    { { &setup_memread_mmap_p928_0_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_1",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_44_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_2",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p928_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_3",
    &setup_memread_mmap_p9a4_53_common,
    { { &setup_memread_mmap_p928_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_4",
    &setup_memread_mmap_p9a4_26_common,
    { { &setup_memread_mmap_p928_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_5",
    &setup_memread_mmap_p9a4_0_common,
    { { &setup_memread_mmap_p928_5_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_6",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p928_6_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_7",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p928_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_8",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p928_8_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_9",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p928_9_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_10",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p9a4_45_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_11",
    &setup_memread_mmap_pf44_0_common,
    { { &setup_memread_mmap_p928_11_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_12",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p928_12_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_13",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p928_13_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pc5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_14",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p928_14_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pc5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_15",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p928_15_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_16",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p928_8_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_17",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9a4_80_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pc5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_18",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p928_14_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_19",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p928_19_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_20",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p928_20_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_21",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p928_21_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_8_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_22",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p928_14_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_23",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p928_23_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_23_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_24",
    &setup_memread_mmap_p9a4_55_common,
    { { &setup_memread_mmap_p928_24_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_25",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p928_25_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pb28_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_26",
    &setup_memread_mmap_p9a4_53_common,
    { { &setup_memread_mmap_p928_26_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_26_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p928_27",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_p9a4_80_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p90_0",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p90_1",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_0",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_1",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_1_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_2",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_3",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pd8_3_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_4",
    &setup_memread_mmap_p9a4_82_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_p8c_4_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_5",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pfc_3_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_6",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pd8_5_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_7",
    &setup_memread_mmap_p9a4_82_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_p8c_7_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_8",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pfc_1_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_9",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p8c_9_proc0 }, { &setup_memread_mmap_p8c_9_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_10",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pd8_5_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_11",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pd8_3_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_12",
    &setup_memread_mmap_p9a4_82_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_p8c_4_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_13",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pd8_3_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_14",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_3_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_15",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pd8_5_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_16",
    &setup_memread_mmap_p9a4_82_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_p8c_7_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pbc_5_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8c_17",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pd8_5_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8b_0",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p8b_0_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8b_1",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p8b_1_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8b_2",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p8b_2_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8b_3",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p8b_0_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8b_4",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p8b_1_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8b_5",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p8b_5_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8b_6",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p8b_2_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8b_7",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p8b_5_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8a_0",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8a_1",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p8c_4_proc1 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8a_2",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8a_3",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p8c_7_proc1 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8a_4",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p8a_5",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p88_0",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p88_1",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p86_0",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p86_1",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p86_2",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p86_3",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p83_0",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p8b_0_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p83_1",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p8b_1_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p83_2",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p8b_2_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p83_3",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p8b_0_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p83_4",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p8b_1_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p83_5",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p8b_5_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p83_6",
    &setup_memread_mmap_p9b_1_common,
    { { &setup_memread_mmap_p8b_2_proc0 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pbb_1_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p83_7",
    &setup_memread_mmap_p9b_0_common,
    { { &setup_memread_mmap_p8b_5_proc0 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_0",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_1",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p828_1_proc0 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_2",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p828_1_proc0 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_3",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p8c_7_proc1 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_4",
    &setup_memread_mmap_p9a4_14_common,
    { { &setup_memread_mmap_p8c_7_proc1 }, { &setup_memread_mmap_pa28_8_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pc5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_5",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_6",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p8c_9_proc0 }, { &setup_memread_mmap_pa28_9_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pa28_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_7",
    &setup_memread_mmap_p9a4_123_common,
    { { &setup_memread_mmap_p828_7_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_8",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p828_1_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_9",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_pa28_8_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_10",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_11",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_p828_1_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_12",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_13",
    &setup_memread_mmap_p9a4_28_common,
    { { &setup_memread_mmap_pa28_8_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_14",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_15",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p8c_9_proc0 }, { &setup_memread_mmap_p828_15_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p828_15_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_16",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p828_16_proc0 }, { &setup_memread_mmap_p828_15_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p928_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_17",
    &setup_memread_mmap_p9c_7_common,
    { { &setup_memread_mmap_p828_16_proc0 }, { &setup_memread_mmap_p828_15_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_p828_15_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_18",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_19",
    &setup_memread_mmap_p9a4_123_common,
    { { &setup_memread_mmap_p828_19_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_20",
    &setup_memread_mmap_p9a4_123_common,
    { { &setup_memread_mmap_p828_7_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pc5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_21",
    &setup_memread_mmap_p9a4_123_common,
    { { &setup_memread_mmap_p828_19_proc0 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pc5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_22",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_23",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_24",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_1_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_25",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_26",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pa28_10_proc0 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p828_27",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p80_0",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_3_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p80_1",
    &setup_memread_mmap_p9c_0_common,
    { { &setup_memread_mmap_pd8_5_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_pfc_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p70_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p70_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_p70_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p70_2",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_p70_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p70_3",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_p70_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p70_4",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_p70_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p6c_0",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_0_proc1 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p6c_1",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_2_proc1 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p68_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pd4_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p68_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_p68_1_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p68_2",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p68_2_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p68_3",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_p68_3_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p68_4",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_p68_4_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p68_5",
    &setup_memread_mmap_pf5_6_common,
    { { &setup_memread_mmap_p68_5_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pf5_6_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p68_6",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_p68_6_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p68_7",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_p68_7_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p68_8",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_p68_8_proc0 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p60_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p58_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p58_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p4c_0",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_0_proc1 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p4c_1",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pd6_2_proc1 }, { &setup_memread_mmap_pf6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p4a_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pd4_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p4a_1",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pd4_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p4a_2",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pd4_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p4a_3",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pd4_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pc5_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p40_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p30_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p30_1",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pd8_3_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p30_2",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pd8_5_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p30_3",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_1_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p30_4",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_3_proc0 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pfc_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p2c_0",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_0_proc1 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p2c_1",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_0_proc1 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p28_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pd4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p20_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p18_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p18_1",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pec_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p0c_0",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_0_proc1 }, { &setup_memread_mmap_pd6_0_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p0c_1",
    &setup_memread_mmap_pf6_0_common,
    { { &setup_memread_mmap_pf6_0_proc1 }, { &setup_memread_mmap_pd6_2_proc1 } },
    &setup_memread_mmap_pf6_0_procfinal,
    &setup_memread_mmap_pf6_0_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p0a_0",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p0a_1",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p0a_2",
    &setup_memread_mmap_pfc_2_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pd4_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p0a_3",
    &setup_memread_mmap_pf5_5_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pc5_1_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_2_final,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe5_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memread_mmap_p00_0",
    &setup_memread_mmap_pfc_0_common,
    { { &setup_memread_mmap_pfc_0_proc1 }, { &setup_memread_mmap_pfc_0_proc1 } },
    &setup_memread_mmap_pfc_0_procfinal,
    &setup_memread_mmap_pfc_0_procfinal,
    { { &test_memread_mmap_p70_0_0, 0, "memread" },
      { &test_memread_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
//+++ common
  {}
};
